!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APIENTRY	glcorearb.h	45;"	d
APIENTRYP	glcorearb.h	48;"	d
CPP	Makefile	/^	CPP=clang++ -std=c++14 -g -Wall -Werror$/;"	m
CPP	Makefile	/^	CPP=g++ -g -Wall -Werror$/;"	m
DO	gl_shims.cpp	13;"	d	file:
DO	gl_shims.cpp	5;"	d	file:
DO	gl_shims.cpp	8;"	d	file:
DO	gl_shims.hpp	72;"	d
GLAPI	glcorearb.h	51;"	d
GLDEBUGPROC	glcorearb.h	/^typedef void (APIENTRY  *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLDEBUGPROCARB	glcorearb.h	/^typedef void (APIENTRY  *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,const void *userParam);$/;"	t
GLEXT_64_TYPES_DEFINED	glcorearb.h	1499;"	d
GLVULKANPROCNV	glcorearb.h	/^typedef void (APIENTRY  *GLVULKANPROCNV)(void);$/;"	t
GL_ACCUM_ADJACENT_PAIRS_NV	glcorearb.h	5112;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	glcorearb.h	2154;"	d
GL_ACTIVE_ATTRIBUTES	glcorearb.h	762;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	glcorearb.h	763;"	d
GL_ACTIVE_PROGRAM	glcorearb.h	1924;"	d
GL_ACTIVE_PROGRAM_EXT	glcorearb.h	4532;"	d
GL_ACTIVE_RESOURCES	glcorearb.h	2454;"	d
GL_ACTIVE_SUBROUTINES	glcorearb.h	1753;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	glcorearb.h	1756;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	glcorearb.h	1754;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	glcorearb.h	1755;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	glcorearb.h	1757;"	d
GL_ACTIVE_TEXTURE	glcorearb.h	514;"	d
GL_ACTIVE_UNIFORMS	glcorearb.h	759;"	d
GL_ACTIVE_UNIFORM_BLOCKS	glcorearb.h	1448;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	glcorearb.h	1447;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	glcorearb.h	760;"	d
GL_ACTIVE_VARIABLES	glcorearb.h	2470;"	d
GL_ADJACENT_PAIRS_NV	glcorearb.h	5113;"	d
GL_AFFINE_2D_NV	glcorearb.h	5090;"	d
GL_AFFINE_3D_NV	glcorearb.h	5091;"	d
GL_ALIASED_LINE_WIDTH_RANGE	glcorearb.h	467;"	d
GL_ALL_BARRIER_BITS	glcorearb.h	2169;"	d
GL_ALL_SHADER_BITS	glcorearb.h	1922;"	d
GL_ALPHA	glcorearb.h	238;"	d
GL_ALPHA_REF_COMMAND_NV	glcorearb.h	4783;"	d
GL_ALREADY_SIGNALED	glcorearb.h	1573;"	d
GL_ALWAYS	glcorearb.h	110;"	d
GL_AMD_performance_monitor	glcorearb.h	3904;"	d
GL_AND	glcorearb.h	214;"	d
GL_AND_INVERTED	glcorearb.h	217;"	d
GL_AND_REVERSE	glcorearb.h	215;"	d
GL_ANY_SAMPLES_PASSED	glcorearb.h	1649;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	glcorearb.h	2270;"	d
GL_APPLE_rgb_422	glcorearb.h	3939;"	d
GL_ARB_ES2_compatibility	glcorearb.h	2897;"	d
GL_ARB_ES3_1_compatibility	glcorearb.h	2901;"	d
GL_ARB_ES3_2_compatibility	glcorearb.h	2905;"	d
GL_ARB_ES3_compatibility	glcorearb.h	2916;"	d
GL_ARB_arrays_of_arrays	glcorearb.h	2920;"	d
GL_ARB_base_instance	glcorearb.h	2924;"	d
GL_ARB_bindless_texture	glcorearb.h	2928;"	d
GL_ARB_blend_func_extended	glcorearb.h	2968;"	d
GL_ARB_buffer_storage	glcorearb.h	2972;"	d
GL_ARB_cl_event	glcorearb.h	2976;"	d
GL_ARB_clear_buffer_object	glcorearb.h	2988;"	d
GL_ARB_clear_texture	glcorearb.h	2992;"	d
GL_ARB_clip_control	glcorearb.h	2996;"	d
GL_ARB_compressed_texture_pixel_storage	glcorearb.h	3000;"	d
GL_ARB_compute_shader	glcorearb.h	3004;"	d
GL_ARB_compute_variable_group_size	glcorearb.h	3008;"	d
GL_ARB_conditional_render_inverted	glcorearb.h	3020;"	d
GL_ARB_conservative_depth	glcorearb.h	3024;"	d
GL_ARB_copy_buffer	glcorearb.h	3028;"	d
GL_ARB_copy_image	glcorearb.h	3032;"	d
GL_ARB_cull_distance	glcorearb.h	3036;"	d
GL_ARB_debug_output	glcorearb.h	3040;"	d
GL_ARB_depth_buffer_float	glcorearb.h	3077;"	d
GL_ARB_depth_clamp	glcorearb.h	3081;"	d
GL_ARB_derivative_control	glcorearb.h	3085;"	d
GL_ARB_direct_state_access	glcorearb.h	3089;"	d
GL_ARB_draw_buffers_blend	glcorearb.h	3093;"	d
GL_ARB_draw_elements_base_vertex	glcorearb.h	3107;"	d
GL_ARB_draw_indirect	glcorearb.h	3111;"	d
GL_ARB_draw_instanced	glcorearb.h	3115;"	d
GL_ARB_enhanced_layouts	glcorearb.h	3125;"	d
GL_ARB_explicit_attrib_location	glcorearb.h	3129;"	d
GL_ARB_explicit_uniform_location	glcorearb.h	3133;"	d
GL_ARB_fragment_coord_conventions	glcorearb.h	3137;"	d
GL_ARB_fragment_layer_viewport	glcorearb.h	3141;"	d
GL_ARB_fragment_shader_interlock	glcorearb.h	3145;"	d
GL_ARB_framebuffer_no_attachments	glcorearb.h	3149;"	d
GL_ARB_framebuffer_object	glcorearb.h	3153;"	d
GL_ARB_framebuffer_sRGB	glcorearb.h	3157;"	d
GL_ARB_geometry_shader4	glcorearb.h	3161;"	d
GL_ARB_get_program_binary	glcorearb.h	3193;"	d
GL_ARB_get_texture_sub_image	glcorearb.h	3197;"	d
GL_ARB_gl_spirv	glcorearb.h	3201;"	d
GL_ARB_gpu_shader5	glcorearb.h	3211;"	d
GL_ARB_gpu_shader_fp64	glcorearb.h	3215;"	d
GL_ARB_gpu_shader_int64	glcorearb.h	3219;"	d
GL_ARB_half_float_vertex	glcorearb.h	3304;"	d
GL_ARB_imaging	glcorearb.h	3308;"	d
GL_ARB_indirect_parameters	glcorearb.h	3314;"	d
GL_ARB_instanced_arrays	glcorearb.h	3326;"	d
GL_ARB_internalformat_query	glcorearb.h	3335;"	d
GL_ARB_internalformat_query2	glcorearb.h	3339;"	d
GL_ARB_invalidate_subdata	glcorearb.h	3344;"	d
GL_ARB_map_buffer_alignment	glcorearb.h	3348;"	d
GL_ARB_map_buffer_range	glcorearb.h	3352;"	d
GL_ARB_multi_bind	glcorearb.h	3356;"	d
GL_ARB_multi_draw_indirect	glcorearb.h	3360;"	d
GL_ARB_occlusion_query2	glcorearb.h	3364;"	d
GL_ARB_parallel_shader_compile	glcorearb.h	3368;"	d
GL_ARB_pipeline_statistics_query	glcorearb.h	3378;"	d
GL_ARB_pixel_buffer_object	glcorearb.h	3392;"	d
GL_ARB_post_depth_coverage	glcorearb.h	3400;"	d
GL_ARB_program_interface_query	glcorearb.h	3404;"	d
GL_ARB_provoking_vertex	glcorearb.h	3408;"	d
GL_ARB_query_buffer_object	glcorearb.h	3412;"	d
GL_ARB_robust_buffer_access_behavior	glcorearb.h	3416;"	d
GL_ARB_robustness	glcorearb.h	3420;"	d
GL_ARB_robustness_isolation	glcorearb.h	3449;"	d
GL_ARB_sample_locations	glcorearb.h	3453;"	d
GL_ARB_sample_shading	glcorearb.h	3473;"	d
GL_ARB_sampler_objects	glcorearb.h	3483;"	d
GL_ARB_seamless_cube_map	glcorearb.h	3487;"	d
GL_ARB_seamless_cubemap_per_texture	glcorearb.h	3491;"	d
GL_ARB_separate_shader_objects	glcorearb.h	3495;"	d
GL_ARB_shader_atomic_counter_ops	glcorearb.h	3499;"	d
GL_ARB_shader_atomic_counters	glcorearb.h	3503;"	d
GL_ARB_shader_ballot	glcorearb.h	3507;"	d
GL_ARB_shader_bit_encoding	glcorearb.h	3511;"	d
GL_ARB_shader_clock	glcorearb.h	3515;"	d
GL_ARB_shader_draw_parameters	glcorearb.h	3519;"	d
GL_ARB_shader_group_vote	glcorearb.h	3523;"	d
GL_ARB_shader_image_load_store	glcorearb.h	3527;"	d
GL_ARB_shader_image_size	glcorearb.h	3531;"	d
GL_ARB_shader_precision	glcorearb.h	3535;"	d
GL_ARB_shader_stencil_export	glcorearb.h	3539;"	d
GL_ARB_shader_storage_buffer_object	glcorearb.h	3543;"	d
GL_ARB_shader_subroutine	glcorearb.h	3547;"	d
GL_ARB_shader_texture_image_samples	glcorearb.h	3551;"	d
GL_ARB_shader_viewport_layer_array	glcorearb.h	3555;"	d
GL_ARB_shading_language_420pack	glcorearb.h	3559;"	d
GL_ARB_shading_language_include	glcorearb.h	3563;"	d
GL_ARB_shading_language_packing	glcorearb.h	3584;"	d
GL_ARB_sparse_buffer	glcorearb.h	3588;"	d
GL_ARB_sparse_texture	glcorearb.h	3602;"	d
GL_ARB_sparse_texture2	glcorearb.h	3621;"	d
GL_ARB_sparse_texture_clamp	glcorearb.h	3625;"	d
GL_ARB_stencil_texturing	glcorearb.h	3629;"	d
GL_ARB_sync	glcorearb.h	3633;"	d
GL_ARB_tessellation_shader	glcorearb.h	3637;"	d
GL_ARB_texture_barrier	glcorearb.h	3641;"	d
GL_ARB_texture_border_clamp	glcorearb.h	3645;"	d
GL_ARB_texture_buffer_object	glcorearb.h	3650;"	d
GL_ARB_texture_buffer_object_rgb32	glcorearb.h	3663;"	d
GL_ARB_texture_buffer_range	glcorearb.h	3667;"	d
GL_ARB_texture_compression_bptc	glcorearb.h	3671;"	d
GL_ARB_texture_compression_rgtc	glcorearb.h	3679;"	d
GL_ARB_texture_cube_map_array	glcorearb.h	3683;"	d
GL_ARB_texture_filter_minmax	glcorearb.h	3694;"	d
GL_ARB_texture_gather	glcorearb.h	3700;"	d
GL_ARB_texture_mirror_clamp_to_edge	glcorearb.h	3707;"	d
GL_ARB_texture_mirrored_repeat	glcorearb.h	3711;"	d
GL_ARB_texture_multisample	glcorearb.h	3716;"	d
GL_ARB_texture_non_power_of_two	glcorearb.h	3720;"	d
GL_ARB_texture_query_levels	glcorearb.h	3724;"	d
GL_ARB_texture_query_lod	glcorearb.h	3728;"	d
GL_ARB_texture_rg	glcorearb.h	3732;"	d
GL_ARB_texture_rgb10_a2ui	glcorearb.h	3736;"	d
GL_ARB_texture_stencil8	glcorearb.h	3740;"	d
GL_ARB_texture_storage	glcorearb.h	3744;"	d
GL_ARB_texture_storage_multisample	glcorearb.h	3748;"	d
GL_ARB_texture_swizzle	glcorearb.h	3752;"	d
GL_ARB_texture_view	glcorearb.h	3756;"	d
GL_ARB_timer_query	glcorearb.h	3760;"	d
GL_ARB_transform_feedback2	glcorearb.h	3764;"	d
GL_ARB_transform_feedback3	glcorearb.h	3768;"	d
GL_ARB_transform_feedback_instanced	glcorearb.h	3772;"	d
GL_ARB_transform_feedback_overflow_query	glcorearb.h	3776;"	d
GL_ARB_uniform_buffer_object	glcorearb.h	3782;"	d
GL_ARB_vertex_array_bgra	glcorearb.h	3786;"	d
GL_ARB_vertex_array_object	glcorearb.h	3790;"	d
GL_ARB_vertex_attrib_64bit	glcorearb.h	3794;"	d
GL_ARB_vertex_attrib_binding	glcorearb.h	3798;"	d
GL_ARB_vertex_type_10f_11f_11f_rev	glcorearb.h	3802;"	d
GL_ARB_vertex_type_2_10_10_10_rev	glcorearb.h	3806;"	d
GL_ARB_viewport_array	glcorearb.h	3810;"	d
GL_ARC_TO_NV	glcorearb.h	5159;"	d
GL_ARRAY_BUFFER	glcorearb.h	623;"	d
GL_ARRAY_BUFFER_BINDING	glcorearb.h	625;"	d
GL_ARRAY_SIZE	glcorearb.h	2460;"	d
GL_ARRAY_STRIDE	glcorearb.h	2463;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	glcorearb.h	2168;"	d
GL_ATOMIC_COUNTER_BUFFER	glcorearb.h	2128;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	glcorearb.h	2133;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	glcorearb.h	2134;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	glcorearb.h	2129;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	glcorearb.h	2132;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	glcorearb.h	2466;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	glcorearb.h	2286;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	glcorearb.h	2139;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	glcorearb.h	2138;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	glcorearb.h	2136;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	glcorearb.h	2137;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	glcorearb.h	2135;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	glcorearb.h	2131;"	d
GL_ATOMIC_COUNTER_BUFFER_START	glcorearb.h	2130;"	d
GL_ATTACHED_SHADERS	glcorearb.h	758;"	d
GL_ATTRIBUTE_ADDRESS_COMMAND_NV	glcorearb.h	4777;"	d
GL_AUTO_GENERATE_MIPMAP	glcorearb.h	2375;"	d
GL_BACK	glcorearb.h	128;"	d
GL_BACK_LEFT	glcorearb.h	125;"	d
GL_BACK_RIGHT	glcorearb.h	126;"	d
GL_BEVEL_NV	glcorearb.h	5106;"	d
GL_BGR	glcorearb.h	454;"	d
GL_BGRA	glcorearb.h	455;"	d
GL_BGRA_INTEGER	glcorearb.h	1072;"	d
GL_BGR_INTEGER	glcorearb.h	1071;"	d
GL_BLEND	glcorearb.h	169;"	d
GL_BLEND_ADVANCED_COHERENT_KHR	glcorearb.h	3838;"	d
GL_BLEND_ADVANCED_COHERENT_NV	glcorearb.h	4752;"	d
GL_BLEND_COLOR	glcorearb.h	3309;"	d
GL_BLEND_COLOR_COMMAND_NV	glcorearb.h	4779;"	d
GL_BLEND_DST	glcorearb.h	167;"	d
GL_BLEND_DST_ALPHA	glcorearb.h	567;"	d
GL_BLEND_DST_RGB	glcorearb.h	565;"	d
GL_BLEND_EQUATION	glcorearb.h	3310;"	d
GL_BLEND_EQUATION_ALPHA	glcorearb.h	722;"	d
GL_BLEND_EQUATION_RGB	glcorearb.h	693;"	d
GL_BLEND_OVERLAP_NV	glcorearb.h	4693;"	d
GL_BLEND_PREMULTIPLIED_SRC_NV	glcorearb.h	4694;"	d
GL_BLEND_SRC	glcorearb.h	168;"	d
GL_BLEND_SRC_ALPHA	glcorearb.h	568;"	d
GL_BLEND_SRC_RGB	glcorearb.h	566;"	d
GL_BLOCK_INDEX	glcorearb.h	2462;"	d
GL_BLUE	glcorearb.h	237;"	d
GL_BLUE_INTEGER	glcorearb.h	1068;"	d
GL_BLUE_NV	glcorearb.h	4695;"	d
GL_BOLD_BIT_NV	glcorearb.h	5161;"	d
GL_BOOL	glcorearb.h	740;"	d
GL_BOOL_VEC2	glcorearb.h	741;"	d
GL_BOOL_VEC3	glcorearb.h	742;"	d
GL_BOOL_VEC4	glcorearb.h	743;"	d
GL_BOUNDING_BOX_NV	glcorearb.h	5085;"	d
GL_BOUNDING_BOX_OF_BOUNDING_BOXES_NV	glcorearb.h	5096;"	d
GL_BUFFER	glcorearb.h	2318;"	d
GL_BUFFER_ACCESS	glcorearb.h	631;"	d
GL_BUFFER_ACCESS_FLAGS	glcorearb.h	1097;"	d
GL_BUFFER_BINDING	glcorearb.h	2467;"	d
GL_BUFFER_DATA_SIZE	glcorearb.h	2468;"	d
GL_BUFFER_GPU_ADDRESS_NV	glcorearb.h	5382;"	d
GL_BUFFER_IMMUTABLE_STORAGE	glcorearb.h	2615;"	d
GL_BUFFER_MAPPED	glcorearb.h	632;"	d
GL_BUFFER_MAP_LENGTH	glcorearb.h	1098;"	d
GL_BUFFER_MAP_OFFSET	glcorearb.h	1099;"	d
GL_BUFFER_MAP_POINTER	glcorearb.h	633;"	d
GL_BUFFER_OBJECT_EXT	glcorearb.h	3951;"	d
GL_BUFFER_SIZE	glcorearb.h	617;"	d
GL_BUFFER_STORAGE_FLAGS	glcorearb.h	2616;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	glcorearb.h	2165;"	d
GL_BUFFER_USAGE	glcorearb.h	618;"	d
GL_BUFFER_VARIABLE	glcorearb.h	2439;"	d
GL_BYTE	glcorearb.h	204;"	d
GL_CAVEAT_SUPPORT	glcorearb.h	2407;"	d
GL_CCW	glcorearb.h	138;"	d
GL_CIRCULAR_CCW_ARC_TO_NV	glcorearb.h	5156;"	d
GL_CIRCULAR_CW_ARC_TO_NV	glcorearb.h	5157;"	d
GL_CIRCULAR_TANGENT_ARC_TO_NV	glcorearb.h	5158;"	d
GL_CLAMP_READ_COLOR	glcorearb.h	1025;"	d
GL_CLAMP_TO_BORDER	glcorearb.h	540;"	d
GL_CLAMP_TO_BORDER_ARB	glcorearb.h	3646;"	d
GL_CLAMP_TO_EDGE	glcorearb.h	458;"	d
GL_CLEAR	glcorearb.h	213;"	d
GL_CLEAR_BUFFER	glcorearb.h	2403;"	d
GL_CLEAR_TEXTURE	glcorearb.h	2617;"	d
GL_CLIENT_MAPPED_BUFFER_BARRIER_BIT	glcorearb.h	2614;"	d
GL_CLIENT_STORAGE_BIT	glcorearb.h	2613;"	d
GL_CLIPPING_INPUT_PRIMITIVES_ARB	glcorearb.h	3387;"	d
GL_CLIPPING_OUTPUT_PRIMITIVES_ARB	glcorearb.h	3388;"	d
GL_CLIP_DEPTH_MODE	glcorearb.h	2654;"	d
GL_CLIP_DISTANCE0	glcorearb.h	1001;"	d
GL_CLIP_DISTANCE1	glcorearb.h	1002;"	d
GL_CLIP_DISTANCE2	glcorearb.h	1003;"	d
GL_CLIP_DISTANCE3	glcorearb.h	1004;"	d
GL_CLIP_DISTANCE4	glcorearb.h	1005;"	d
GL_CLIP_DISTANCE5	glcorearb.h	1006;"	d
GL_CLIP_DISTANCE6	glcorearb.h	1007;"	d
GL_CLIP_DISTANCE7	glcorearb.h	1008;"	d
GL_CLIP_ORIGIN	glcorearb.h	2653;"	d
GL_CLOSE_PATH_NV	glcorearb.h	5127;"	d
GL_COLOR	glcorearb.h	230;"	d
GL_COLORBURN_KHR	glcorearb.h	3821;"	d
GL_COLORBURN_NV	glcorearb.h	4696;"	d
GL_COLORDODGE_KHR	glcorearb.h	3820;"	d
GL_COLORDODGE_NV	glcorearb.h	4697;"	d
GL_COLOR_ARRAY_ADDRESS_NV	glcorearb.h	5503;"	d
GL_COLOR_ARRAY_LENGTH_NV	glcorearb.h	5513;"	d
GL_COLOR_ATTACHMENT0	glcorearb.h	1145;"	d
GL_COLOR_ATTACHMENT1	glcorearb.h	1146;"	d
GL_COLOR_ATTACHMENT10	glcorearb.h	1155;"	d
GL_COLOR_ATTACHMENT11	glcorearb.h	1156;"	d
GL_COLOR_ATTACHMENT12	glcorearb.h	1157;"	d
GL_COLOR_ATTACHMENT13	glcorearb.h	1158;"	d
GL_COLOR_ATTACHMENT14	glcorearb.h	1159;"	d
GL_COLOR_ATTACHMENT15	glcorearb.h	1160;"	d
GL_COLOR_ATTACHMENT16	glcorearb.h	1161;"	d
GL_COLOR_ATTACHMENT17	glcorearb.h	1162;"	d
GL_COLOR_ATTACHMENT18	glcorearb.h	1163;"	d
GL_COLOR_ATTACHMENT19	glcorearb.h	1164;"	d
GL_COLOR_ATTACHMENT2	glcorearb.h	1147;"	d
GL_COLOR_ATTACHMENT20	glcorearb.h	1165;"	d
GL_COLOR_ATTACHMENT21	glcorearb.h	1166;"	d
GL_COLOR_ATTACHMENT22	glcorearb.h	1167;"	d
GL_COLOR_ATTACHMENT23	glcorearb.h	1168;"	d
GL_COLOR_ATTACHMENT24	glcorearb.h	1169;"	d
GL_COLOR_ATTACHMENT25	glcorearb.h	1170;"	d
GL_COLOR_ATTACHMENT26	glcorearb.h	1171;"	d
GL_COLOR_ATTACHMENT27	glcorearb.h	1172;"	d
GL_COLOR_ATTACHMENT28	glcorearb.h	1173;"	d
GL_COLOR_ATTACHMENT29	glcorearb.h	1174;"	d
GL_COLOR_ATTACHMENT3	glcorearb.h	1148;"	d
GL_COLOR_ATTACHMENT30	glcorearb.h	1175;"	d
GL_COLOR_ATTACHMENT31	glcorearb.h	1176;"	d
GL_COLOR_ATTACHMENT4	glcorearb.h	1149;"	d
GL_COLOR_ATTACHMENT5	glcorearb.h	1150;"	d
GL_COLOR_ATTACHMENT6	glcorearb.h	1151;"	d
GL_COLOR_ATTACHMENT7	glcorearb.h	1152;"	d
GL_COLOR_ATTACHMENT8	glcorearb.h	1153;"	d
GL_COLOR_ATTACHMENT9	glcorearb.h	1154;"	d
GL_COLOR_BUFFER_BIT	glcorearb.h	92;"	d
GL_COLOR_CLEAR_VALUE	glcorearb.h	175;"	d
GL_COLOR_COMPONENTS	glcorearb.h	2357;"	d
GL_COLOR_ENCODING	glcorearb.h	2376;"	d
GL_COLOR_LOGIC_OP	glcorearb.h	367;"	d
GL_COLOR_RENDERABLE	glcorearb.h	2360;"	d
GL_COLOR_SAMPLES_NV	glcorearb.h	4912;"	d
GL_COLOR_WRITEMASK	glcorearb.h	176;"	d
GL_COMMAND_BARRIER_BIT	glcorearb.h	2162;"	d
GL_COMPARE_REF_TO_TEXTURE	glcorearb.h	1000;"	d
GL_COMPATIBLE_SUBROUTINES	glcorearb.h	1761;"	d
GL_COMPILE_STATUS	glcorearb.h	754;"	d
GL_COMPLETION_STATUS_ARB	glcorearb.h	3370;"	d
GL_COMPRESSED_R11_EAC	glcorearb.h	2265;"	d
GL_COMPRESSED_RED	glcorearb.h	1014;"	d
GL_COMPRESSED_RED_RGTC1	glcorearb.h	1204;"	d
GL_COMPRESSED_RG	glcorearb.h	1015;"	d
GL_COMPRESSED_RG11_EAC	glcorearb.h	2267;"	d
GL_COMPRESSED_RGB	glcorearb.h	533;"	d
GL_COMPRESSED_RGB8_ETC2	glcorearb.h	2259;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	glcorearb.h	2261;"	d
GL_COMPRESSED_RGBA	glcorearb.h	534;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	glcorearb.h	2263;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	glcorearb.h	3876;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	glcorearb.h	3873;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	glcorearb.h	3874;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	glcorearb.h	3875;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	glcorearb.h	3877;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	glcorearb.h	3878;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	glcorearb.h	3865;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	glcorearb.h	3866;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	glcorearb.h	3867;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	glcorearb.h	3868;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	glcorearb.h	3869;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	glcorearb.h	3870;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	glcorearb.h	3871;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	glcorearb.h	3872;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM	glcorearb.h	2221;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	glcorearb.h	3672;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	glcorearb.h	4550;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	glcorearb.h	4551;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	glcorearb.h	4552;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT	glcorearb.h	2223;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	glcorearb.h	3674;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT	glcorearb.h	2224;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	glcorearb.h	3675;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	glcorearb.h	4549;"	d
GL_COMPRESSED_RG_RGTC2	glcorearb.h	1206;"	d
GL_COMPRESSED_SIGNED_R11_EAC	glcorearb.h	2266;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	glcorearb.h	1205;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	glcorearb.h	2268;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	glcorearb.h	1207;"	d
GL_COMPRESSED_SRGB	glcorearb.h	979;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	glcorearb.h	3890;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	glcorearb.h	3887;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	glcorearb.h	3888;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	glcorearb.h	3889;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	glcorearb.h	3891;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	glcorearb.h	3892;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	glcorearb.h	3879;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	glcorearb.h	3880;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	glcorearb.h	3881;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	glcorearb.h	3882;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	glcorearb.h	3883;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	glcorearb.h	3884;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	glcorearb.h	3885;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	glcorearb.h	3886;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	glcorearb.h	2264;"	d
GL_COMPRESSED_SRGB8_ETC2	glcorearb.h	2260;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	glcorearb.h	2262;"	d
GL_COMPRESSED_SRGB_ALPHA	glcorearb.h	980;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM	glcorearb.h	2222;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	glcorearb.h	3673;"	d
GL_COMPRESSED_TEXTURE_FORMATS	glcorearb.h	539;"	d
GL_COMPUTE_SHADER	glcorearb.h	2272;"	d
GL_COMPUTE_SHADER_BIT	glcorearb.h	2289;"	d
GL_COMPUTE_SHADER_INVOCATIONS_ARB	glcorearb.h	3386;"	d
GL_COMPUTE_SUBROUTINE	glcorearb.h	2446;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	glcorearb.h	2452;"	d
GL_COMPUTE_TEXTURE	glcorearb.h	2385;"	d
GL_COMPUTE_WORK_GROUP_SIZE	glcorearb.h	2284;"	d
GL_CONDITION_SATISFIED	glcorearb.h	1575;"	d
GL_CONFORMANT_NV	glcorearb.h	5051;"	d
GL_CONIC_CURVE_TO_NV	glcorearb.h	5198;"	d
GL_CONJOINT_NV	glcorearb.h	4698;"	d
GL_CONSERVATIVE_RASTERIZATION_INTEL	glcorearb.h	4582;"	d
GL_CONSERVATIVE_RASTERIZATION_NV	glcorearb.h	4841;"	d
GL_CONSERVATIVE_RASTER_DILATE_GRANULARITY_NV	glcorearb.h	4855;"	d
GL_CONSERVATIVE_RASTER_DILATE_NV	glcorearb.h	4853;"	d
GL_CONSERVATIVE_RASTER_DILATE_RANGE_NV	glcorearb.h	4854;"	d
GL_CONSERVATIVE_RASTER_MODE_NV	glcorearb.h	4864;"	d
GL_CONSERVATIVE_RASTER_MODE_POST_SNAP_NV	glcorearb.h	4865;"	d
GL_CONSERVATIVE_RASTER_MODE_PRE_SNAP_TRIANGLES_NV	glcorearb.h	4866;"	d
GL_CONSTANT_ALPHA	glcorearb.h	588;"	d
GL_CONSTANT_COLOR	glcorearb.h	586;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	glcorearb.h	1537;"	d
GL_CONTEXT_CORE_PROFILE_BIT	glcorearb.h	1536;"	d
GL_CONTEXT_FLAGS	glcorearb.h	1013;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	glcorearb.h	2326;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	glcorearb.h	1016;"	d
GL_CONTEXT_FLAG_NO_ERROR_BIT_KHR	glcorearb.h	3851;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT	glcorearb.h	2669;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	glcorearb.h	3421;"	d
GL_CONTEXT_LOST	glcorearb.h	2650;"	d
GL_CONTEXT_PROFILE_MASK	glcorearb.h	1557;"	d
GL_CONTEXT_RELEASE_BEHAVIOR	glcorearb.h	2670;"	d
GL_CONTEXT_RELEASE_BEHAVIOR_FLUSH	glcorearb.h	2671;"	d
GL_CONTEXT_ROBUST_ACCESS	glcorearb.h	3860;"	d
GL_CONTRAST_NV	glcorearb.h	4699;"	d
GL_CONVEX_HULL_NV	glcorearb.h	5084;"	d
GL_COPY	glcorearb.h	216;"	d
GL_COPY_INVERTED	glcorearb.h	225;"	d
GL_COPY_READ_BUFFER	glcorearb.h	1431;"	d
GL_COPY_READ_BUFFER_BINDING	glcorearb.h	2114;"	d
GL_COPY_WRITE_BUFFER	glcorearb.h	1432;"	d
GL_COPY_WRITE_BUFFER_BINDING	glcorearb.h	2115;"	d
GL_COUNTER_RANGE_AMD	glcorearb.h	3906;"	d
GL_COUNTER_TYPE_AMD	glcorearb.h	3905;"	d
GL_COUNT_DOWN_NV	glcorearb.h	5082;"	d
GL_COUNT_UP_NV	glcorearb.h	5081;"	d
GL_COVERAGE_MODULATION_NV	glcorearb.h	4917;"	d
GL_COVERAGE_MODULATION_TABLE_NV	glcorearb.h	4911;"	d
GL_COVERAGE_MODULATION_TABLE_SIZE_NV	glcorearb.h	4918;"	d
GL_CUBIC_CURVE_TO_NV	glcorearb.h	5138;"	d
GL_CULL_FACE	glcorearb.h	148;"	d
GL_CULL_FACE_MODE	glcorearb.h	149;"	d
GL_CURRENT_PROGRAM	glcorearb.h	766;"	d
GL_CURRENT_QUERY	glcorearb.h	620;"	d
GL_CURRENT_VERTEX_ATTRIB	glcorearb.h	698;"	d
GL_CW	glcorearb.h	137;"	d
GL_DARKEN_KHR	glcorearb.h	3818;"	d
GL_DARKEN_NV	glcorearb.h	4700;"	d
GL_DEBUG_CALLBACK_FUNCTION	glcorearb.h	2292;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	glcorearb.h	3044;"	d
GL_DEBUG_CALLBACK_USER_PARAM	glcorearb.h	2293;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	glcorearb.h	3045;"	d
GL_DEBUG_GROUP_STACK_DEPTH	glcorearb.h	2317;"	d
GL_DEBUG_LOGGED_MESSAGES	glcorearb.h	2308;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	glcorearb.h	3060;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	glcorearb.h	2291;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	glcorearb.h	3043;"	d
GL_DEBUG_OUTPUT	glcorearb.h	2325;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	glcorearb.h	2290;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	glcorearb.h	3042;"	d
GL_DEBUG_SEVERITY_HIGH	glcorearb.h	2309;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	glcorearb.h	3061;"	d
GL_DEBUG_SEVERITY_LOW	glcorearb.h	2311;"	d
GL_DEBUG_SEVERITY_LOW_ARB	glcorearb.h	3063;"	d
GL_DEBUG_SEVERITY_MEDIUM	glcorearb.h	2310;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	glcorearb.h	3062;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	glcorearb.h	2315;"	d
GL_DEBUG_SOURCE_API	glcorearb.h	2294;"	d
GL_DEBUG_SOURCE_API_ARB	glcorearb.h	3046;"	d
GL_DEBUG_SOURCE_APPLICATION	glcorearb.h	2298;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	glcorearb.h	3050;"	d
GL_DEBUG_SOURCE_OTHER	glcorearb.h	2299;"	d
GL_DEBUG_SOURCE_OTHER_ARB	glcorearb.h	3051;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	glcorearb.h	2296;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	glcorearb.h	3048;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	glcorearb.h	2297;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	glcorearb.h	3049;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	glcorearb.h	2295;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	glcorearb.h	3047;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	glcorearb.h	2301;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	glcorearb.h	3053;"	d
GL_DEBUG_TYPE_ERROR	glcorearb.h	2300;"	d
GL_DEBUG_TYPE_ERROR_ARB	glcorearb.h	3052;"	d
GL_DEBUG_TYPE_MARKER	glcorearb.h	2312;"	d
GL_DEBUG_TYPE_OTHER	glcorearb.h	2305;"	d
GL_DEBUG_TYPE_OTHER_ARB	glcorearb.h	3057;"	d
GL_DEBUG_TYPE_PERFORMANCE	glcorearb.h	2304;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	glcorearb.h	3056;"	d
GL_DEBUG_TYPE_POP_GROUP	glcorearb.h	2314;"	d
GL_DEBUG_TYPE_PORTABILITY	glcorearb.h	2303;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	glcorearb.h	3055;"	d
GL_DEBUG_TYPE_PUSH_GROUP	glcorearb.h	2313;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	glcorearb.h	2302;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	glcorearb.h	3054;"	d
GL_DECODE_EXT	glcorearb.h	4562;"	d
GL_DECR	glcorearb.h	247;"	d
GL_DECR_WRAP	glcorearb.h	577;"	d
GL_DELETE_STATUS	glcorearb.h	753;"	d
GL_DEPTH	glcorearb.h	231;"	d
GL_DEPTH24_STENCIL8	glcorearb.h	1118;"	d
GL_DEPTH32F_STENCIL8	glcorearb.h	1101;"	d
GL_DEPTH_ATTACHMENT	glcorearb.h	1177;"	d
GL_DEPTH_BUFFER_BIT	glcorearb.h	90;"	d
GL_DEPTH_CLAMP	glcorearb.h	1558;"	d
GL_DEPTH_CLEAR_VALUE	glcorearb.h	154;"	d
GL_DEPTH_COMPONENT	glcorearb.h	234;"	d
GL_DEPTH_COMPONENT16	glcorearb.h	570;"	d
GL_DEPTH_COMPONENT24	glcorearb.h	571;"	d
GL_DEPTH_COMPONENT32	glcorearb.h	572;"	d
GL_DEPTH_COMPONENT32F	glcorearb.h	1100;"	d
GL_DEPTH_COMPONENTS	glcorearb.h	2358;"	d
GL_DEPTH_FUNC	glcorearb.h	155;"	d
GL_DEPTH_RANGE	glcorearb.h	151;"	d
GL_DEPTH_RENDERABLE	glcorearb.h	2361;"	d
GL_DEPTH_SAMPLES_NV	glcorearb.h	4913;"	d
GL_DEPTH_STENCIL	glcorearb.h	1116;"	d
GL_DEPTH_STENCIL_ATTACHMENT	glcorearb.h	1114;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	glcorearb.h	2498;"	d
GL_DEPTH_TEST	glcorearb.h	152;"	d
GL_DEPTH_WRITEMASK	glcorearb.h	153;"	d
GL_DIFFERENCE_KHR	glcorearb.h	3824;"	d
GL_DIFFERENCE_NV	glcorearb.h	4701;"	d
GL_DISJOINT_NV	glcorearb.h	4702;"	d
GL_DISPATCH_INDIRECT_BUFFER	glcorearb.h	2287;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	glcorearb.h	2288;"	d
GL_DITHER	glcorearb.h	166;"	d
GL_DONT_CARE	glcorearb.h	201;"	d
GL_DOUBLE	glcorearb.h	380;"	d
GL_DOUBLEBUFFER	glcorearb.h	177;"	d
GL_DOUBLE_MAT2	glcorearb.h	1744;"	d
GL_DOUBLE_MAT2x3	glcorearb.h	1747;"	d
GL_DOUBLE_MAT2x4	glcorearb.h	1748;"	d
GL_DOUBLE_MAT3	glcorearb.h	1745;"	d
GL_DOUBLE_MAT3x2	glcorearb.h	1749;"	d
GL_DOUBLE_MAT3x4	glcorearb.h	1750;"	d
GL_DOUBLE_MAT4	glcorearb.h	1746;"	d
GL_DOUBLE_MAT4x2	glcorearb.h	1751;"	d
GL_DOUBLE_MAT4x3	glcorearb.h	1752;"	d
GL_DOUBLE_VEC2	glcorearb.h	1741;"	d
GL_DOUBLE_VEC3	glcorearb.h	1742;"	d
GL_DOUBLE_VEC4	glcorearb.h	1743;"	d
GL_DRAW_ARRAYS_COMMAND_NV	glcorearb.h	4771;"	d
GL_DRAW_ARRAYS_INSTANCED_COMMAND_NV	glcorearb.h	4775;"	d
GL_DRAW_ARRAYS_STRIP_COMMAND_NV	glcorearb.h	4773;"	d
GL_DRAW_BUFFER	glcorearb.h	171;"	d
GL_DRAW_BUFFER0	glcorearb.h	706;"	d
GL_DRAW_BUFFER1	glcorearb.h	707;"	d
GL_DRAW_BUFFER10	glcorearb.h	716;"	d
GL_DRAW_BUFFER11	glcorearb.h	717;"	d
GL_DRAW_BUFFER12	glcorearb.h	718;"	d
GL_DRAW_BUFFER13	glcorearb.h	719;"	d
GL_DRAW_BUFFER14	glcorearb.h	720;"	d
GL_DRAW_BUFFER15	glcorearb.h	721;"	d
GL_DRAW_BUFFER2	glcorearb.h	708;"	d
GL_DRAW_BUFFER3	glcorearb.h	709;"	d
GL_DRAW_BUFFER4	glcorearb.h	710;"	d
GL_DRAW_BUFFER5	glcorearb.h	711;"	d
GL_DRAW_BUFFER6	glcorearb.h	712;"	d
GL_DRAW_BUFFER7	glcorearb.h	713;"	d
GL_DRAW_BUFFER8	glcorearb.h	714;"	d
GL_DRAW_BUFFER9	glcorearb.h	715;"	d
GL_DRAW_ELEMENTS_COMMAND_NV	glcorearb.h	4770;"	d
GL_DRAW_ELEMENTS_INSTANCED_COMMAND_NV	glcorearb.h	4774;"	d
GL_DRAW_ELEMENTS_STRIP_COMMAND_NV	glcorearb.h	4772;"	d
GL_DRAW_FRAMEBUFFER	glcorearb.h	1130;"	d
GL_DRAW_FRAMEBUFFER_BINDING	glcorearb.h	1127;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	glcorearb.h	5521;"	d
GL_DRAW_INDIRECT_BUFFER	glcorearb.h	1733;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	glcorearb.h	1734;"	d
GL_DRAW_INDIRECT_LENGTH_NV	glcorearb.h	5522;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	glcorearb.h	5520;"	d
GL_DST_ALPHA	glcorearb.h	117;"	d
GL_DST_ATOP_NV	glcorearb.h	4703;"	d
GL_DST_COLOR	glcorearb.h	119;"	d
GL_DST_IN_NV	glcorearb.h	4704;"	d
GL_DST_NV	glcorearb.h	4705;"	d
GL_DST_OUT_NV	glcorearb.h	4706;"	d
GL_DST_OVER_NV	glcorearb.h	4707;"	d
GL_DUP_FIRST_CUBIC_CURVE_TO_NV	glcorearb.h	5153;"	d
GL_DUP_LAST_CUBIC_CURVE_TO_NV	glcorearb.h	5154;"	d
GL_DYNAMIC_COPY	glcorearb.h	642;"	d
GL_DYNAMIC_DRAW	glcorearb.h	640;"	d
GL_DYNAMIC_READ	glcorearb.h	641;"	d
GL_DYNAMIC_STORAGE_BIT	glcorearb.h	2612;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	glcorearb.h	5506;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	glcorearb.h	5516;"	d
GL_EFFECTIVE_RASTER_SAMPLES_EXT	glcorearb.h	4523;"	d
GL_ELEMENT_ADDRESS_COMMAND_NV	glcorearb.h	4776;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	glcorearb.h	5509;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	glcorearb.h	2158;"	d
GL_ELEMENT_ARRAY_BUFFER	glcorearb.h	624;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	glcorearb.h	626;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	glcorearb.h	5519;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	glcorearb.h	5499;"	d
GL_EQUAL	glcorearb.h	105;"	d
GL_EQUIV	glcorearb.h	222;"	d
GL_EXCLUSION_KHR	glcorearb.h	3825;"	d
GL_EXCLUSION_NV	glcorearb.h	4708;"	d
GL_EXCLUSIVE_EXT	glcorearb.h	4569;"	d
GL_EXTENSIONS	glcorearb.h	251;"	d
GL_EXT_debug_label	glcorearb.h	3947;"	d
GL_EXT_debug_marker	glcorearb.h	3963;"	d
GL_EXT_direct_state_access	glcorearb.h	3975;"	d
GL_EXT_draw_instanced	glcorearb.h	4494;"	d
GL_EXT_polygon_offset_clamp	glcorearb.h	4504;"	d
GL_EXT_post_depth_coverage	glcorearb.h	4513;"	d
GL_EXT_raster_multisample	glcorearb.h	4517;"	d
GL_EXT_separate_shader_objects	glcorearb.h	4531;"	d
GL_EXT_shader_integer_mix	glcorearb.h	4544;"	d
GL_EXT_texture_compression_s3tc	glcorearb.h	4548;"	d
GL_EXT_texture_filter_minmax	glcorearb.h	4556;"	d
GL_EXT_texture_sRGB_decode	glcorearb.h	4560;"	d
GL_EXT_window_rectangles	glcorearb.h	4567;"	d
GL_FALSE	glcorearb.h	93;"	d
GL_FASTEST	glcorearb.h	202;"	d
GL_FILE_NAME_NV	glcorearb.h	5064;"	d
GL_FILL	glcorearb.h	243;"	d
GL_FILL_RECTANGLE_NV	glcorearb.h	4892;"	d
GL_FILTER	glcorearb.h	2379;"	d
GL_FIRST_TO_REST_NV	glcorearb.h	5114;"	d
GL_FIRST_VERTEX_CONVENTION	glcorearb.h	1560;"	d
GL_FIXED	glcorearb.h	1897;"	d
GL_FIXED_ONLY	glcorearb.h	1026;"	d
GL_FLOAT	glcorearb.h	210;"	d
GL_FLOAT16_NV	glcorearb.h	4972;"	d
GL_FLOAT16_VEC2_NV	glcorearb.h	4973;"	d
GL_FLOAT16_VEC3_NV	glcorearb.h	4974;"	d
GL_FLOAT16_VEC4_NV	glcorearb.h	4975;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	glcorearb.h	1102;"	d
GL_FLOAT_MAT2	glcorearb.h	744;"	d
GL_FLOAT_MAT2x3	glcorearb.h	969;"	d
GL_FLOAT_MAT2x4	glcorearb.h	970;"	d
GL_FLOAT_MAT3	glcorearb.h	745;"	d
GL_FLOAT_MAT3x2	glcorearb.h	971;"	d
GL_FLOAT_MAT3x4	glcorearb.h	972;"	d
GL_FLOAT_MAT4	glcorearb.h	746;"	d
GL_FLOAT_MAT4x2	glcorearb.h	973;"	d
GL_FLOAT_MAT4x3	glcorearb.h	974;"	d
GL_FLOAT_VEC2	glcorearb.h	734;"	d
GL_FLOAT_VEC3	glcorearb.h	735;"	d
GL_FLOAT_VEC4	glcorearb.h	736;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	glcorearb.h	5508;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	glcorearb.h	5518;"	d
GL_FONT_ASCENDER_BIT_NV	glcorearb.h	5177;"	d
GL_FONT_DESCENDER_BIT_NV	glcorearb.h	5178;"	d
GL_FONT_GLYPHS_AVAILABLE_NV	glcorearb.h	5194;"	d
GL_FONT_HAS_KERNING_BIT_NV	glcorearb.h	5184;"	d
GL_FONT_HEIGHT_BIT_NV	glcorearb.h	5179;"	d
GL_FONT_MAX_ADVANCE_HEIGHT_BIT_NV	glcorearb.h	5181;"	d
GL_FONT_MAX_ADVANCE_WIDTH_BIT_NV	glcorearb.h	5180;"	d
GL_FONT_NUM_GLYPH_INDICES_BIT_NV	glcorearb.h	5200;"	d
GL_FONT_TARGET_UNAVAILABLE_NV	glcorearb.h	5195;"	d
GL_FONT_UNAVAILABLE_NV	glcorearb.h	5196;"	d
GL_FONT_UNDERLINE_POSITION_BIT_NV	glcorearb.h	5182;"	d
GL_FONT_UNDERLINE_THICKNESS_BIT_NV	glcorearb.h	5183;"	d
GL_FONT_UNINTELLIGIBLE_NV	glcorearb.h	5197;"	d
GL_FONT_UNITS_PER_EM_BIT_NV	glcorearb.h	5176;"	d
GL_FONT_X_MAX_BOUNDS_BIT_NV	glcorearb.h	5174;"	d
GL_FONT_X_MIN_BOUNDS_BIT_NV	glcorearb.h	5172;"	d
GL_FONT_Y_MAX_BOUNDS_BIT_NV	glcorearb.h	5175;"	d
GL_FONT_Y_MIN_BOUNDS_BIT_NV	glcorearb.h	5173;"	d
GL_FRACTIONAL_EVEN	glcorearb.h	1773;"	d
GL_FRACTIONAL_ODD	glcorearb.h	1772;"	d
GL_FRAGMENT_COVERAGE_COLOR_NV	glcorearb.h	4898;"	d
GL_FRAGMENT_COVERAGE_TO_COLOR_NV	glcorearb.h	4897;"	d
GL_FRAGMENT_INPUT_NV	glcorearb.h	5212;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	glcorearb.h	1739;"	d
GL_FRAGMENT_SHADER	glcorearb.h	726;"	d
GL_FRAGMENT_SHADER_BIT	glcorearb.h	1918;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	glcorearb.h	764;"	d
GL_FRAGMENT_SHADER_INVOCATIONS_ARB	glcorearb.h	3385;"	d
GL_FRAGMENT_SUBROUTINE	glcorearb.h	2445;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	glcorearb.h	2451;"	d
GL_FRAGMENT_TEXTURE	glcorearb.h	2384;"	d
GL_FRAMEBUFFER	glcorearb.h	1179;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	glcorearb.h	1109;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	glcorearb.h	1108;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	glcorearb.h	1104;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	glcorearb.h	1105;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	glcorearb.h	1110;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	glcorearb.h	1107;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	glcorearb.h	1544;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	glcorearb.h	3168;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	glcorearb.h	1134;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	glcorearb.h	1133;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	glcorearb.h	1106;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	glcorearb.h	1111;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_BASE_VIEW_INDEX_OVR	glcorearb.h	5578;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	glcorearb.h	1136;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	glcorearb.h	1137;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	glcorearb.h	1135;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_NUM_VIEWS_OVR	glcorearb.h	5577;"	d
GL_FRAMEBUFFER_BARRIER_BIT	glcorearb.h	2166;"	d
GL_FRAMEBUFFER_BINDING	glcorearb.h	1126;"	d
GL_FRAMEBUFFER_BLEND	glcorearb.h	2365;"	d
GL_FRAMEBUFFER_COMPLETE	glcorearb.h	1138;"	d
GL_FRAMEBUFFER_DEFAULT	glcorearb.h	1112;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	glcorearb.h	2332;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	glcorearb.h	2329;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	glcorearb.h	2330;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	glcorearb.h	2331;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	glcorearb.h	2328;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	glcorearb.h	1139;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	glcorearb.h	1141;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	glcorearb.h	3170;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	glcorearb.h	1545;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	glcorearb.h	3169;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	glcorearb.h	1140;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	glcorearb.h	1194;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	glcorearb.h	1142;"	d
GL_FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR	glcorearb.h	5580;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_ARB	glcorearb.h	3460;"	d
GL_FRAMEBUFFER_PROGRAMMABLE_SAMPLE_LOCATIONS_NV	glcorearb.h	5344;"	d
GL_FRAMEBUFFER_RENDERABLE	glcorearb.h	2363;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	glcorearb.h	2364;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_ARB	glcorearb.h	3461;"	d
GL_FRAMEBUFFER_SAMPLE_LOCATION_PIXEL_GRID_NV	glcorearb.h	5345;"	d
GL_FRAMEBUFFER_SRGB	glcorearb.h	1196;"	d
GL_FRAMEBUFFER_UNDEFINED	glcorearb.h	1113;"	d
GL_FRAMEBUFFER_UNSUPPORTED	glcorearb.h	1143;"	d
GL_FRONT	glcorearb.h	127;"	d
GL_FRONT_AND_BACK	glcorearb.h	131;"	d
GL_FRONT_FACE	glcorearb.h	150;"	d
GL_FRONT_FACE_COMMAND_NV	glcorearb.h	4786;"	d
GL_FRONT_LEFT	glcorearb.h	123;"	d
GL_FRONT_RIGHT	glcorearb.h	124;"	d
GL_FULL_SUPPORT	glcorearb.h	2406;"	d
GL_FUNC_ADD	glcorearb.h	581;"	d
GL_FUNC_REVERSE_SUBTRACT	glcorearb.h	583;"	d
GL_FUNC_SUBTRACT	glcorearb.h	582;"	d
GL_GEOMETRY_INPUT_TYPE	glcorearb.h	1548;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	glcorearb.h	3173;"	d
GL_GEOMETRY_OUTPUT_TYPE	glcorearb.h	1549;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	glcorearb.h	3174;"	d
GL_GEOMETRY_SHADER	glcorearb.h	1546;"	d
GL_GEOMETRY_SHADER_ARB	glcorearb.h	3171;"	d
GL_GEOMETRY_SHADER_BIT	glcorearb.h	1919;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	glcorearb.h	1735;"	d
GL_GEOMETRY_SHADER_PRIMITIVES_EMITTED_ARB	glcorearb.h	3384;"	d
GL_GEOMETRY_SUBROUTINE	glcorearb.h	2444;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	glcorearb.h	2450;"	d
GL_GEOMETRY_TEXTURE	glcorearb.h	2383;"	d
GL_GEOMETRY_VERTICES_OUT	glcorearb.h	1547;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	glcorearb.h	3172;"	d
GL_GEQUAL	glcorearb.h	109;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	glcorearb.h	2371;"	d
GL_GET_TEXTURE_IMAGE_TYPE	glcorearb.h	2372;"	d
GL_GLEXT_PROTOTYPES	GL.hpp	9;"	d
GL_GLYPH_HAS_KERNING_BIT_NV	glcorearb.h	5171;"	d
GL_GLYPH_HEIGHT_BIT_NV	glcorearb.h	5164;"	d
GL_GLYPH_HORIZONTAL_BEARING_ADVANCE_BIT_NV	glcorearb.h	5167;"	d
GL_GLYPH_HORIZONTAL_BEARING_X_BIT_NV	glcorearb.h	5165;"	d
GL_GLYPH_HORIZONTAL_BEARING_Y_BIT_NV	glcorearb.h	5166;"	d
GL_GLYPH_VERTICAL_BEARING_ADVANCE_BIT_NV	glcorearb.h	5170;"	d
GL_GLYPH_VERTICAL_BEARING_X_BIT_NV	glcorearb.h	5168;"	d
GL_GLYPH_VERTICAL_BEARING_Y_BIT_NV	glcorearb.h	5169;"	d
GL_GLYPH_WIDTH_BIT_NV	glcorearb.h	5163;"	d
GL_GPU_ADDRESS_NV	glcorearb.h	5383;"	d
GL_GREATER	glcorearb.h	107;"	d
GL_GREEN	glcorearb.h	236;"	d
GL_GREEN_INTEGER	glcorearb.h	1067;"	d
GL_GREEN_NV	glcorearb.h	4709;"	d
GL_GUILTY_CONTEXT_RESET	glcorearb.h	2663;"	d
GL_GUILTY_CONTEXT_RESET_ARB	glcorearb.h	3423;"	d
GL_HALF_FLOAT	glcorearb.h	1197;"	d
GL_HARDLIGHT_KHR	glcorearb.h	3822;"	d
GL_HARDLIGHT_NV	glcorearb.h	4710;"	d
GL_HARDMIX_NV	glcorearb.h	4711;"	d
GL_HIGH_FLOAT	glcorearb.h	1902;"	d
GL_HIGH_INT	glcorearb.h	1905;"	d
GL_HORIZONTAL_LINE_TO_NV	glcorearb.h	5132;"	d
GL_HSL_COLOR_KHR	glcorearb.h	3828;"	d
GL_HSL_COLOR_NV	glcorearb.h	4712;"	d
GL_HSL_HUE_KHR	glcorearb.h	3826;"	d
GL_HSL_HUE_NV	glcorearb.h	4713;"	d
GL_HSL_LUMINOSITY_KHR	glcorearb.h	3829;"	d
GL_HSL_LUMINOSITY_NV	glcorearb.h	4714;"	d
GL_HSL_SATURATION_KHR	glcorearb.h	3827;"	d
GL_HSL_SATURATION_NV	glcorearb.h	4715;"	d
GL_IMAGE_1D	glcorearb.h	2177;"	d
GL_IMAGE_1D_ARRAY	glcorearb.h	2183;"	d
GL_IMAGE_2D	glcorearb.h	2178;"	d
GL_IMAGE_2D_ARRAY	glcorearb.h	2184;"	d
GL_IMAGE_2D_MULTISAMPLE	glcorearb.h	2186;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	glcorearb.h	2187;"	d
GL_IMAGE_2D_RECT	glcorearb.h	2180;"	d
GL_IMAGE_3D	glcorearb.h	2179;"	d
GL_IMAGE_BINDING_ACCESS	glcorearb.h	2176;"	d
GL_IMAGE_BINDING_FORMAT	glcorearb.h	2211;"	d
GL_IMAGE_BINDING_LAYER	glcorearb.h	2175;"	d
GL_IMAGE_BINDING_LAYERED	glcorearb.h	2174;"	d
GL_IMAGE_BINDING_LEVEL	glcorearb.h	2173;"	d
GL_IMAGE_BINDING_NAME	glcorearb.h	2172;"	d
GL_IMAGE_BUFFER	glcorearb.h	2182;"	d
GL_IMAGE_CLASS_10_10_10_2	glcorearb.h	2418;"	d
GL_IMAGE_CLASS_11_11_10	glcorearb.h	2417;"	d
GL_IMAGE_CLASS_1_X_16	glcorearb.h	2413;"	d
GL_IMAGE_CLASS_1_X_32	glcorearb.h	2410;"	d
GL_IMAGE_CLASS_1_X_8	glcorearb.h	2416;"	d
GL_IMAGE_CLASS_2_X_16	glcorearb.h	2412;"	d
GL_IMAGE_CLASS_2_X_32	glcorearb.h	2409;"	d
GL_IMAGE_CLASS_2_X_8	glcorearb.h	2415;"	d
GL_IMAGE_CLASS_4_X_16	glcorearb.h	2411;"	d
GL_IMAGE_CLASS_4_X_32	glcorearb.h	2408;"	d
GL_IMAGE_CLASS_4_X_8	glcorearb.h	2414;"	d
GL_IMAGE_COMPATIBILITY_CLASS	glcorearb.h	2393;"	d
GL_IMAGE_CUBE	glcorearb.h	2181;"	d
GL_IMAGE_CUBE_MAP_ARRAY	glcorearb.h	2185;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	glcorearb.h	2214;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	glcorearb.h	2213;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	glcorearb.h	2212;"	d
GL_IMAGE_PIXEL_FORMAT	glcorearb.h	2394;"	d
GL_IMAGE_PIXEL_TYPE	glcorearb.h	2395;"	d
GL_IMAGE_TEXEL_SIZE	glcorearb.h	2392;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	glcorearb.h	1899;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	glcorearb.h	1898;"	d
GL_INCLUSIVE_EXT	glcorearb.h	4568;"	d
GL_INCR	glcorearb.h	246;"	d
GL_INCR_WRAP	glcorearb.h	576;"	d
GL_INDEX_ARRAY_ADDRESS_NV	glcorearb.h	5504;"	d
GL_INDEX_ARRAY_LENGTH_NV	glcorearb.h	5514;"	d
GL_INFO_LOG_LENGTH	glcorearb.h	757;"	d
GL_INNOCENT_CONTEXT_RESET	glcorearb.h	2664;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	glcorearb.h	3424;"	d
GL_INT	glcorearb.h	208;"	d
GL_INT16_NV	glcorearb.h	4954;"	d
GL_INT16_VEC2_NV	glcorearb.h	4955;"	d
GL_INT16_VEC3_NV	glcorearb.h	4956;"	d
GL_INT16_VEC4_NV	glcorearb.h	4957;"	d
GL_INT64_ARB	glcorearb.h	3220;"	d
GL_INT64_NV	glcorearb.h	4948;"	d
GL_INT64_VEC2_ARB	glcorearb.h	3221;"	d
GL_INT64_VEC2_NV	glcorearb.h	4958;"	d
GL_INT64_VEC3_ARB	glcorearb.h	3222;"	d
GL_INT64_VEC3_NV	glcorearb.h	4959;"	d
GL_INT64_VEC4_ARB	glcorearb.h	3223;"	d
GL_INT64_VEC4_NV	glcorearb.h	4960;"	d
GL_INT8_NV	glcorearb.h	4950;"	d
GL_INT8_VEC2_NV	glcorearb.h	4951;"	d
GL_INT8_VEC3_NV	glcorearb.h	4952;"	d
GL_INT8_VEC4_NV	glcorearb.h	4953;"	d
GL_INTEL_conservative_rasterization	glcorearb.h	4581;"	d
GL_INTEL_framebuffer_CMAA	glcorearb.h	4586;"	d
GL_INTEL_performance_query	glcorearb.h	4594;"	d
GL_INTERLEAVED_ATTRIBS	glcorearb.h	1050;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	glcorearb.h	2342;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	glcorearb.h	2349;"	d
GL_INTERNALFORMAT_BLUE_SIZE	glcorearb.h	2341;"	d
GL_INTERNALFORMAT_BLUE_TYPE	glcorearb.h	2348;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	glcorearb.h	2343;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	glcorearb.h	2350;"	d
GL_INTERNALFORMAT_GREEN_SIZE	glcorearb.h	2340;"	d
GL_INTERNALFORMAT_GREEN_TYPE	glcorearb.h	2347;"	d
GL_INTERNALFORMAT_PREFERRED	glcorearb.h	2338;"	d
GL_INTERNALFORMAT_RED_SIZE	glcorearb.h	2339;"	d
GL_INTERNALFORMAT_RED_TYPE	glcorearb.h	2346;"	d
GL_INTERNALFORMAT_SHARED_SIZE	glcorearb.h	2345;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	glcorearb.h	2344;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	glcorearb.h	2351;"	d
GL_INTERNALFORMAT_SUPPORTED	glcorearb.h	2337;"	d
GL_INT_2_10_10_10_REV	glcorearb.h	1659;"	d
GL_INT_IMAGE_1D	glcorearb.h	2188;"	d
GL_INT_IMAGE_1D_ARRAY	glcorearb.h	2194;"	d
GL_INT_IMAGE_2D	glcorearb.h	2189;"	d
GL_INT_IMAGE_2D_ARRAY	glcorearb.h	2195;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	glcorearb.h	2197;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	glcorearb.h	2198;"	d
GL_INT_IMAGE_2D_RECT	glcorearb.h	2191;"	d
GL_INT_IMAGE_3D	glcorearb.h	2190;"	d
GL_INT_IMAGE_BUFFER	glcorearb.h	2193;"	d
GL_INT_IMAGE_CUBE	glcorearb.h	2192;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	glcorearb.h	2196;"	d
GL_INT_SAMPLER_1D	glcorearb.h	1081;"	d
GL_INT_SAMPLER_1D_ARRAY	glcorearb.h	1085;"	d
GL_INT_SAMPLER_2D	glcorearb.h	1082;"	d
GL_INT_SAMPLER_2D_ARRAY	glcorearb.h	1086;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	glcorearb.h	1592;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	glcorearb.h	1595;"	d
GL_INT_SAMPLER_2D_RECT	glcorearb.h	1408;"	d
GL_INT_SAMPLER_3D	glcorearb.h	1083;"	d
GL_INT_SAMPLER_BUFFER	glcorearb.h	1409;"	d
GL_INT_SAMPLER_CUBE	glcorearb.h	1084;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	glcorearb.h	1731;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	glcorearb.h	3689;"	d
GL_INT_VEC2	glcorearb.h	737;"	d
GL_INT_VEC3	glcorearb.h	738;"	d
GL_INT_VEC4	glcorearb.h	739;"	d
GL_INVALID_ENUM	glcorearb.h	133;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	glcorearb.h	1103;"	d
GL_INVALID_INDEX	glcorearb.h	1465;"	d
GL_INVALID_OPERATION	glcorearb.h	135;"	d
GL_INVALID_VALUE	glcorearb.h	134;"	d
GL_INVERT	glcorearb.h	223;"	d
GL_INVERT_OVG_NV	glcorearb.h	4716;"	d
GL_INVERT_RGB_NV	glcorearb.h	4717;"	d
GL_ISOLINES	glcorearb.h	1771;"	d
GL_IS_PER_PATCH	glcorearb.h	2481;"	d
GL_IS_ROW_MAJOR	glcorearb.h	2465;"	d
GL_ITALIC_BIT_NV	glcorearb.h	5162;"	d
GL_KEEP	glcorearb.h	244;"	d
GL_KHR_blend_equation_advanced	glcorearb.h	3814;"	d
GL_KHR_blend_equation_advanced_coherent	glcorearb.h	3837;"	d
GL_KHR_context_flush_control	glcorearb.h	3842;"	d
GL_KHR_debug	glcorearb.h	3846;"	d
GL_KHR_no_error	glcorearb.h	3850;"	d
GL_KHR_robust_buffer_access_behavior	glcorearb.h	3855;"	d
GL_KHR_robustness	glcorearb.h	3859;"	d
GL_KHR_texture_compression_astc_hdr	glcorearb.h	3864;"	d
GL_KHR_texture_compression_astc_ldr	glcorearb.h	3896;"	d
GL_KHR_texture_compression_astc_sliced_3d	glcorearb.h	3900;"	d
GL_LARGE_CCW_ARC_TO_NV	glcorearb.h	5148;"	d
GL_LARGE_CW_ARC_TO_NV	glcorearb.h	5150;"	d
GL_LAST_VERTEX_CONVENTION	glcorearb.h	1561;"	d
GL_LAYER_PROVOKING_VERTEX	glcorearb.h	1929;"	d
GL_LEFT	glcorearb.h	129;"	d
GL_LEQUAL	glcorearb.h	106;"	d
GL_LESS	glcorearb.h	104;"	d
GL_LIGHTEN_KHR	glcorearb.h	3819;"	d
GL_LIGHTEN_NV	glcorearb.h	4718;"	d
GL_LINE	glcorearb.h	242;"	d
GL_LINEAR	glcorearb.h	253;"	d
GL_LINEARBURN_NV	glcorearb.h	4719;"	d
GL_LINEARDODGE_NV	glcorearb.h	4720;"	d
GL_LINEARLIGHT_NV	glcorearb.h	4721;"	d
GL_LINEAR_MIPMAP_LINEAR	glcorearb.h	257;"	d
GL_LINEAR_MIPMAP_NEAREST	glcorearb.h	255;"	d
GL_LINES	glcorearb.h	96;"	d
GL_LINES_ADJACENCY	glcorearb.h	1538;"	d
GL_LINES_ADJACENCY_ARB	glcorearb.h	3162;"	d
GL_LINE_LOOP	glcorearb.h	97;"	d
GL_LINE_SMOOTH	glcorearb.h	142;"	d
GL_LINE_SMOOTH_HINT	glcorearb.h	179;"	d
GL_LINE_STRIP	glcorearb.h	98;"	d
GL_LINE_STRIP_ADJACENCY	glcorearb.h	1539;"	d
GL_LINE_STRIP_ADJACENCY_ARB	glcorearb.h	3163;"	d
GL_LINE_TO_NV	glcorearb.h	5130;"	d
GL_LINE_WIDTH	glcorearb.h	143;"	d
GL_LINE_WIDTH_COMMAND_NV	glcorearb.h	4781;"	d
GL_LINE_WIDTH_GRANULARITY	glcorearb.h	145;"	d
GL_LINE_WIDTH_RANGE	glcorearb.h	144;"	d
GL_LINK_STATUS	glcorearb.h	755;"	d
GL_LOCATION	glcorearb.h	2479;"	d
GL_LOCATION_COMPONENT	glcorearb.h	2618;"	d
GL_LOCATION_INDEX	glcorearb.h	2480;"	d
GL_LOGIC_OP_MODE	glcorearb.h	170;"	d
GL_LOSE_CONTEXT_ON_RESET	glcorearb.h	2667;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	glcorearb.h	3422;"	d
GL_LOWER_LEFT	glcorearb.h	768;"	d
GL_LOW_FLOAT	glcorearb.h	1900;"	d
GL_LOW_INT	glcorearb.h	1903;"	d
GL_MAJOR_VERSION	glcorearb.h	1010;"	d
GL_MANUAL_GENERATE_MIPMAP	glcorearb.h	2374;"	d
GL_MAP_COHERENT_BIT	glcorearb.h	2611;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	glcorearb.h	1202;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	glcorearb.h	1201;"	d
GL_MAP_INVALIDATE_RANGE_BIT	glcorearb.h	1200;"	d
GL_MAP_PERSISTENT_BIT	glcorearb.h	2610;"	d
GL_MAP_READ_BIT	glcorearb.h	1198;"	d
GL_MAP_UNSYNCHRONIZED_BIT	glcorearb.h	1203;"	d
GL_MAP_WRITE_BIT	glcorearb.h	1199;"	d
GL_MATRIX_STRIDE	glcorearb.h	2464;"	d
GL_MAX	glcorearb.h	585;"	d
GL_MAX_3D_TEXTURE_SIZE	glcorearb.h	446;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	glcorearb.h	1022;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	glcorearb.h	2153;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	glcorearb.h	2152;"	d
GL_MAX_CLIP_DISTANCES	glcorearb.h	1009;"	d
GL_MAX_COLOR_ATTACHMENTS	glcorearb.h	1144;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	glcorearb.h	1597;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	glcorearb.h	2151;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	glcorearb.h	2145;"	d
GL_MAX_COMBINED_CLIP_AND_CULL_DISTANCES	glcorearb.h	2660;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	glcorearb.h	2280;"	d
GL_MAX_COMBINED_DIMENSIONS	glcorearb.h	2356;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	glcorearb.h	1445;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	glcorearb.h	1444;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	glcorearb.h	2220;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	glcorearb.h	2171;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	glcorearb.h	2497;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	glcorearb.h	2492;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	glcorearb.h	1788;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	glcorearb.h	1789;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	glcorearb.h	732;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	glcorearb.h	1440;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	glcorearb.h	1443;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	glcorearb.h	2279;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	glcorearb.h	2278;"	d
GL_MAX_COMPUTE_FIXED_GROUP_INVOCATIONS_ARB	glcorearb.h	3010;"	d
GL_MAX_COMPUTE_FIXED_GROUP_SIZE_ARB	glcorearb.h	3012;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	glcorearb.h	2275;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	glcorearb.h	2491;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	glcorearb.h	2276;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	glcorearb.h	2274;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	glcorearb.h	2273;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	glcorearb.h	2277;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_INVOCATIONS_ARB	glcorearb.h	3009;"	d
GL_MAX_COMPUTE_VARIABLE_GROUP_SIZE_ARB	glcorearb.h	3011;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	glcorearb.h	2282;"	d
GL_MAX_COMPUTE_WORK_GROUP_INVOCATIONS	glcorearb.h	2281;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	glcorearb.h	2283;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	glcorearb.h	532;"	d
GL_MAX_CULL_DISTANCES	glcorearb.h	2659;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	glcorearb.h	2316;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	glcorearb.h	2307;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	glcorearb.h	3059;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	glcorearb.h	2306;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	glcorearb.h	3058;"	d
GL_MAX_DEPTH	glcorearb.h	2354;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	glcorearb.h	1598;"	d
GL_MAX_DRAW_BUFFERS	glcorearb.h	705;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	glcorearb.h	1648;"	d
GL_MAX_ELEMENTS_INDICES	glcorearb.h	457;"	d
GL_MAX_ELEMENTS_VERTICES	glcorearb.h	456;"	d
GL_MAX_ELEMENT_INDEX	glcorearb.h	2271;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	glcorearb.h	2150;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	glcorearb.h	2144;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	glcorearb.h	2219;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	glcorearb.h	1556;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	glcorearb.h	1738;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	glcorearb.h	2490;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	glcorearb.h	1439;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	glcorearb.h	728;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	glcorearb.h	1911;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	glcorearb.h	2334;"	d
GL_MAX_FRAMEBUFFER_LAYERS	glcorearb.h	2335;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	glcorearb.h	2336;"	d
GL_MAX_FRAMEBUFFER_WIDTH	glcorearb.h	2333;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	glcorearb.h	2149;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	glcorearb.h	2143;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	glcorearb.h	2218;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	glcorearb.h	1554;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	glcorearb.h	1555;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	glcorearb.h	1551;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	glcorearb.h	3178;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	glcorearb.h	1736;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	glcorearb.h	2487;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	glcorearb.h	1543;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	glcorearb.h	3167;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	glcorearb.h	1552;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	glcorearb.h	3179;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	glcorearb.h	1438;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	glcorearb.h	1550;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	glcorearb.h	3177;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	glcorearb.h	3175;"	d
GL_MAX_HEIGHT	glcorearb.h	2353;"	d
GL_MAX_IMAGE_SAMPLES	glcorearb.h	2210;"	d
GL_MAX_IMAGE_UNITS	glcorearb.h	2170;"	d
GL_MAX_INTEGER_SAMPLES	glcorearb.h	1599;"	d
GL_MAX_LABEL_LENGTH	glcorearb.h	2324;"	d
GL_MAX_LAYERS	glcorearb.h	2355;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	glcorearb.h	4933;"	d
GL_MAX_NAME_LENGTH	glcorearb.h	2455;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	glcorearb.h	2456;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	glcorearb.h	2457;"	d
GL_MAX_PATCH_VERTICES	glcorearb.h	1774;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	glcorearb.h	1024;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	glcorearb.h	3703;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	glcorearb.h	1725;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	glcorearb.h	3702;"	d
GL_MAX_RASTER_SAMPLES_EXT	glcorearb.h	4520;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	glcorearb.h	1419;"	d
GL_MAX_RENDERBUFFER_SIZE	glcorearb.h	1115;"	d
GL_MAX_SAMPLES	glcorearb.h	1195;"	d
GL_MAX_SAMPLE_MASK_WORDS	glcorearb.h	1582;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	glcorearb.h	1564;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	glcorearb.h	5384;"	d
GL_MAX_SHADER_COMPILER_THREADS_ARB	glcorearb.h	3369;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	glcorearb.h	2494;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	glcorearb.h	2493;"	d
GL_MAX_SPARSE_3D_TEXTURE_SIZE_ARB	glcorearb.h	3611;"	d
GL_MAX_SPARSE_ARRAY_TEXTURE_LAYERS_ARB	glcorearb.h	3612;"	d
GL_MAX_SPARSE_TEXTURE_SIZE_ARB	glcorearb.h	3610;"	d
GL_MAX_SUBPIXEL_PRECISION_BIAS_BITS_NV	glcorearb.h	4844;"	d
GL_MAX_SUBROUTINES	glcorearb.h	1758;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	glcorearb.h	1759;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	glcorearb.h	2147;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	glcorearb.h	2141;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	glcorearb.h	2216;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	glcorearb.h	1786;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	glcorearb.h	1780;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	glcorearb.h	2488;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	glcorearb.h	1778;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	glcorearb.h	1782;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	glcorearb.h	1784;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	glcorearb.h	1776;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	glcorearb.h	2148;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	glcorearb.h	2142;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	glcorearb.h	2217;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	glcorearb.h	1787;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	glcorearb.h	1783;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	glcorearb.h	2489;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	glcorearb.h	1779;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	glcorearb.h	1785;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	glcorearb.h	1777;"	d
GL_MAX_TESS_GEN_LEVEL	glcorearb.h	1775;"	d
GL_MAX_TESS_PATCH_COMPONENTS	glcorearb.h	1781;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	glcorearb.h	1413;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	glcorearb.h	3652;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	glcorearb.h	725;"	d
GL_MAX_TEXTURE_LOD_BIAS	glcorearb.h	574;"	d
GL_MAX_TEXTURE_SIZE	glcorearb.h	193;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	glcorearb.h	1798;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	glcorearb.h	1048;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	glcorearb.h	1049;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	glcorearb.h	1041;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	glcorearb.h	1442;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	glcorearb.h	1441;"	d
GL_MAX_UNIFORM_LOCATIONS	glcorearb.h	2327;"	d
GL_MAX_VARYING_COMPONENTS	glcorearb.h	1027;"	d
GL_MAX_VARYING_FLOATS	glcorearb.h	730;"	d
GL_MAX_VARYING_VECTORS	glcorearb.h	1910;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	glcorearb.h	2146;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	glcorearb.h	2140;"	d
GL_MAX_VERTEX_ATTRIBS	glcorearb.h	723;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	glcorearb.h	2513;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	glcorearb.h	2512;"	d
GL_MAX_VERTEX_ATTRIB_STRIDE	glcorearb.h	2607;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	glcorearb.h	2215;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	glcorearb.h	1553;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	glcorearb.h	2486;"	d
GL_MAX_VERTEX_STREAMS	glcorearb.h	1740;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	glcorearb.h	731;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	glcorearb.h	1437;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	glcorearb.h	729;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	glcorearb.h	1909;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	glcorearb.h	3176;"	d
GL_MAX_VIEWPORTS	glcorearb.h	1926;"	d
GL_MAX_VIEWPORT_DIMS	glcorearb.h	194;"	d
GL_MAX_VIEWS_OVR	glcorearb.h	5579;"	d
GL_MAX_WIDTH	glcorearb.h	2352;"	d
GL_MAX_WINDOW_RECTANGLES_EXT	glcorearb.h	4572;"	d
GL_MEDIUM_FLOAT	glcorearb.h	1901;"	d
GL_MEDIUM_INT	glcorearb.h	1904;"	d
GL_MIN	glcorearb.h	584;"	d
GL_MINOR_VERSION	glcorearb.h	1011;"	d
GL_MINUS_CLAMPED_NV	glcorearb.h	4722;"	d
GL_MINUS_NV	glcorearb.h	4723;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	glcorearb.h	1737;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	glcorearb.h	2127;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	glcorearb.h	1023;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	glcorearb.h	1724;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	glcorearb.h	3701;"	d
GL_MIN_SAMPLE_SHADING_VALUE	glcorearb.h	1723;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	glcorearb.h	3475;"	d
GL_MIPMAP	glcorearb.h	2373;"	d
GL_MIRRORED_REPEAT	glcorearb.h	573;"	d
GL_MIRRORED_REPEAT_ARB	glcorearb.h	3712;"	d
GL_MIRROR_CLAMP_TO_EDGE	glcorearb.h	2625;"	d
GL_MITER_REVERT_NV	glcorearb.h	5107;"	d
GL_MITER_TRUNCATE_NV	glcorearb.h	5108;"	d
GL_MIXED_DEPTH_SAMPLES_SUPPORTED_NV	glcorearb.h	4915;"	d
GL_MIXED_STENCIL_SAMPLES_SUPPORTED_NV	glcorearb.h	4916;"	d
GL_MOVE_TO_CONTINUES_NV	glcorearb.h	5126;"	d
GL_MOVE_TO_NV	glcorearb.h	5128;"	d
GL_MOVE_TO_RESETS_NV	glcorearb.h	5125;"	d
GL_MULTIPLY_KHR	glcorearb.h	3815;"	d
GL_MULTIPLY_NV	glcorearb.h	4724;"	d
GL_MULTISAMPLE	glcorearb.h	515;"	d
GL_MULTISAMPLES_NV	glcorearb.h	5048;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	glcorearb.h	4934;"	d
GL_MULTISAMPLE_LINE_WIDTH_GRANULARITY_ARB	glcorearb.h	2908;"	d
GL_MULTISAMPLE_LINE_WIDTH_RANGE_ARB	glcorearb.h	2907;"	d
GL_MULTISAMPLE_RASTERIZATION_ALLOWED_EXT	glcorearb.h	4522;"	d
GL_NAMED_STRING_LENGTH_ARB	glcorearb.h	3565;"	d
GL_NAMED_STRING_TYPE_ARB	glcorearb.h	3566;"	d
GL_NAME_LENGTH	glcorearb.h	2458;"	d
GL_NAND	glcorearb.h	227;"	d
GL_NEAREST	glcorearb.h	252;"	d
GL_NEAREST_MIPMAP_LINEAR	glcorearb.h	256;"	d
GL_NEAREST_MIPMAP_NEAREST	glcorearb.h	254;"	d
GL_NEGATIVE_ONE_TO_ONE	glcorearb.h	2651;"	d
GL_NEVER	glcorearb.h	103;"	d
GL_NICEST	glcorearb.h	203;"	d
GL_NONE	glcorearb.h	122;"	d
GL_NOOP	glcorearb.h	218;"	d
GL_NOP_COMMAND_NV	glcorearb.h	4769;"	d
GL_NOR	glcorearb.h	221;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	glcorearb.h	5502;"	d
GL_NORMAL_ARRAY_LENGTH_NV	glcorearb.h	5512;"	d
GL_NOTEQUAL	glcorearb.h	108;"	d
GL_NO_ERROR	glcorearb.h	132;"	d
GL_NO_RESET_NOTIFICATION	glcorearb.h	2668;"	d
GL_NO_RESET_NOTIFICATION_ARB	glcorearb.h	3427;"	d
GL_NUM_ACTIVE_VARIABLES	glcorearb.h	2469;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	glcorearb.h	1760;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	glcorearb.h	538;"	d
GL_NUM_EXTENSIONS	glcorearb.h	1012;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	glcorearb.h	1915;"	d
GL_NUM_SAMPLE_COUNTS	glcorearb.h	2126;"	d
GL_NUM_SHADER_BINARY_FORMATS	glcorearb.h	1908;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	glcorearb.h	2257;"	d
GL_NUM_SPARSE_LEVELS_ARB	glcorearb.h	3605;"	d
GL_NUM_VIRTUAL_PAGE_SIZES_ARB	glcorearb.h	3606;"	d
GL_NUM_WINDOW_RECTANGLES_EXT	glcorearb.h	4573;"	d
GL_NV_bindless_multi_draw_indirect	glcorearb.h	4640;"	d
GL_NV_bindless_multi_draw_indirect_count	glcorearb.h	4650;"	d
GL_NV_bindless_texture	glcorearb.h	4660;"	d
GL_NV_blend_equation_advanced	glcorearb.h	4692;"	d
GL_NV_blend_equation_advanced_coherent	glcorearb.h	4751;"	d
GL_NV_clip_space_w_scaling	glcorearb.h	4756;"	d
GL_NV_command_list	glcorearb.h	4767;"	d
GL_NV_conditional_render	glcorearb.h	4826;"	d
GL_NV_conservative_raster	glcorearb.h	4840;"	d
GL_NV_conservative_raster_dilate	glcorearb.h	4852;"	d
GL_NV_conservative_raster_pre_snap_triangles	glcorearb.h	4863;"	d
GL_NV_draw_vulkan_image	glcorearb.h	4874;"	d
GL_NV_fill_rectangle	glcorearb.h	4891;"	d
GL_NV_fragment_coverage_to_color	glcorearb.h	4896;"	d
GL_NV_fragment_shader_interlock	glcorearb.h	4906;"	d
GL_NV_framebuffer_mixed_samples	glcorearb.h	4910;"	d
GL_NV_framebuffer_multisample_coverage	glcorearb.h	4930;"	d
GL_NV_geometry_shader_passthrough	glcorearb.h	4942;"	d
GL_NV_gpu_shader5	glcorearb.h	4946;"	d
GL_NV_internalformat_sample_query	glcorearb.h	5047;"	d
GL_NV_path_rendering	glcorearb.h	5059;"	d
GL_NV_path_rendering_shared_edge	glcorearb.h	5332;"	d
GL_NV_sample_locations	glcorearb.h	5337;"	d
GL_NV_sample_mask_override_coverage	glcorearb.h	5357;"	d
GL_NV_shader_atomic_counters	glcorearb.h	5361;"	d
GL_NV_shader_atomic_float	glcorearb.h	5365;"	d
GL_NV_shader_atomic_float64	glcorearb.h	5369;"	d
GL_NV_shader_atomic_fp16_vector	glcorearb.h	5373;"	d
GL_NV_shader_atomic_int64	glcorearb.h	5377;"	d
GL_NV_shader_buffer_load	glcorearb.h	5381;"	d
GL_NV_shader_buffer_store	glcorearb.h	5418;"	d
GL_NV_shader_thread_group	glcorearb.h	5423;"	d
GL_NV_shader_thread_shuffle	glcorearb.h	5430;"	d
GL_NV_stereo_view_rendering	glcorearb.h	5434;"	d
GL_NV_texture_barrier	glcorearb.h	5438;"	d
GL_NV_uniform_buffer_unified_memory	glcorearb.h	5446;"	d
GL_NV_vertex_attrib_integer_64bit	glcorearb.h	5453;"	d
GL_NV_vertex_buffer_unified_memory	glcorearb.h	5497;"	d
GL_NV_viewport_array2	glcorearb.h	5552;"	d
GL_NV_viewport_swizzle	glcorearb.h	5556;"	d
GL_OBJECT_TYPE	glcorearb.h	1565;"	d
GL_OFFSET	glcorearb.h	2461;"	d
GL_ONE	glcorearb.h	112;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	glcorearb.h	589;"	d
GL_ONE_MINUS_CONSTANT_COLOR	glcorearb.h	587;"	d
GL_ONE_MINUS_DST_ALPHA	glcorearb.h	118;"	d
GL_ONE_MINUS_DST_COLOR	glcorearb.h	120;"	d
GL_ONE_MINUS_SRC1_ALPHA	glcorearb.h	1647;"	d
GL_ONE_MINUS_SRC1_COLOR	glcorearb.h	1646;"	d
GL_ONE_MINUS_SRC_ALPHA	glcorearb.h	116;"	d
GL_ONE_MINUS_SRC_COLOR	glcorearb.h	114;"	d
GL_OR	glcorearb.h	220;"	d
GL_OR_INVERTED	glcorearb.h	226;"	d
GL_OR_REVERSE	glcorearb.h	224;"	d
GL_OUT_OF_MEMORY	glcorearb.h	136;"	d
GL_OVERLAY_KHR	glcorearb.h	3817;"	d
GL_OVERLAY_NV	glcorearb.h	4725;"	d
GL_OVR_multiview	glcorearb.h	5576;"	d
GL_OVR_multiview2	glcorearb.h	5588;"	d
GL_PACK_ALIGNMENT	glcorearb.h	192;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	glcorearb.h	2124;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	glcorearb.h	2123;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	glcorearb.h	2125;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	glcorearb.h	2122;"	d
GL_PACK_IMAGE_HEIGHT	glcorearb.h	439;"	d
GL_PACK_LSB_FIRST	glcorearb.h	188;"	d
GL_PACK_ROW_LENGTH	glcorearb.h	189;"	d
GL_PACK_SKIP_IMAGES	glcorearb.h	438;"	d
GL_PACK_SKIP_PIXELS	glcorearb.h	191;"	d
GL_PACK_SKIP_ROWS	glcorearb.h	190;"	d
GL_PACK_SWAP_BYTES	glcorearb.h	187;"	d
GL_PARAMETER_BUFFER_ARB	glcorearb.h	3315;"	d
GL_PARAMETER_BUFFER_BINDING_ARB	glcorearb.h	3316;"	d
GL_PATCHES	glcorearb.h	1762;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	glcorearb.h	1764;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	glcorearb.h	1765;"	d
GL_PATCH_VERTICES	glcorearb.h	1763;"	d
GL_PATH_CLIENT_LENGTH_NV	glcorearb.h	5075;"	d
GL_PATH_COMMAND_COUNT_NV	glcorearb.h	5097;"	d
GL_PATH_COMPUTED_LENGTH_NV	glcorearb.h	5100;"	d
GL_PATH_COORD_COUNT_NV	glcorearb.h	5098;"	d
GL_PATH_COVER_DEPTH_FUNC_NV	glcorearb.h	5123;"	d
GL_PATH_DASH_ARRAY_COUNT_NV	glcorearb.h	5099;"	d
GL_PATH_DASH_CAPS_NV	glcorearb.h	5071;"	d
GL_PATH_DASH_OFFSET_NV	glcorearb.h	5074;"	d
GL_PATH_DASH_OFFSET_RESET_NV	glcorearb.h	5124;"	d
GL_PATH_END_CAPS_NV	glcorearb.h	5066;"	d
GL_PATH_ERROR_POSITION_NV	glcorearb.h	5111;"	d
GL_PATH_FILL_BOUNDING_BOX_NV	glcorearb.h	5101;"	d
GL_PATH_FILL_COVER_MODE_NV	glcorearb.h	5078;"	d
GL_PATH_FILL_MASK_NV	glcorearb.h	5077;"	d
GL_PATH_FILL_MODE_NV	glcorearb.h	5076;"	d
GL_PATH_FORMAT_PS_NV	glcorearb.h	5061;"	d
GL_PATH_FORMAT_SVG_NV	glcorearb.h	5060;"	d
GL_PATH_GEN_COEFF_NV	glcorearb.h	5116;"	d
GL_PATH_GEN_COMPONENTS_NV	glcorearb.h	5117;"	d
GL_PATH_GEN_MODE_NV	glcorearb.h	5115;"	d
GL_PATH_INITIAL_DASH_CAP_NV	glcorearb.h	5072;"	d
GL_PATH_INITIAL_END_CAP_NV	glcorearb.h	5067;"	d
GL_PATH_JOIN_STYLE_NV	glcorearb.h	5069;"	d
GL_PATH_MAX_MODELVIEW_STACK_DEPTH_NV	glcorearb.h	5206;"	d
GL_PATH_MAX_PROJECTION_STACK_DEPTH_NV	glcorearb.h	5210;"	d
GL_PATH_MITER_LIMIT_NV	glcorearb.h	5070;"	d
GL_PATH_MODELVIEW_MATRIX_NV	glcorearb.h	5205;"	d
GL_PATH_MODELVIEW_NV	glcorearb.h	5203;"	d
GL_PATH_MODELVIEW_STACK_DEPTH_NV	glcorearb.h	5204;"	d
GL_PATH_OBJECT_BOUNDING_BOX_NV	glcorearb.h	5083;"	d
GL_PATH_PROJECTION_MATRIX_NV	glcorearb.h	5209;"	d
GL_PATH_PROJECTION_NV	glcorearb.h	5202;"	d
GL_PATH_PROJECTION_STACK_DEPTH_NV	glcorearb.h	5208;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_FACTOR_NV	glcorearb.h	5121;"	d
GL_PATH_STENCIL_DEPTH_OFFSET_UNITS_NV	glcorearb.h	5122;"	d
GL_PATH_STENCIL_FUNC_NV	glcorearb.h	5118;"	d
GL_PATH_STENCIL_REF_NV	glcorearb.h	5119;"	d
GL_PATH_STENCIL_VALUE_MASK_NV	glcorearb.h	5120;"	d
GL_PATH_STROKE_BOUNDING_BOX_NV	glcorearb.h	5102;"	d
GL_PATH_STROKE_COVER_MODE_NV	glcorearb.h	5079;"	d
GL_PATH_STROKE_MASK_NV	glcorearb.h	5080;"	d
GL_PATH_STROKE_WIDTH_NV	glcorearb.h	5065;"	d
GL_PATH_TERMINAL_DASH_CAP_NV	glcorearb.h	5073;"	d
GL_PATH_TERMINAL_END_CAP_NV	glcorearb.h	5068;"	d
GL_PATH_TRANSPOSE_MODELVIEW_MATRIX_NV	glcorearb.h	5207;"	d
GL_PATH_TRANSPOSE_PROJECTION_MATRIX_NV	glcorearb.h	5211;"	d
GL_PERCENTAGE_AMD	glcorearb.h	3908;"	d
GL_PERFMON_RESULT_AMD	glcorearb.h	3911;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	glcorearb.h	3909;"	d
GL_PERFMON_RESULT_SIZE_AMD	glcorearb.h	3910;"	d
GL_PERFQUERY_COUNTER_DATA_BOOL32_INTEL	glcorearb.h	4610;"	d
GL_PERFQUERY_COUNTER_DATA_DOUBLE_INTEL	glcorearb.h	4609;"	d
GL_PERFQUERY_COUNTER_DATA_FLOAT_INTEL	glcorearb.h	4608;"	d
GL_PERFQUERY_COUNTER_DATA_UINT32_INTEL	glcorearb.h	4606;"	d
GL_PERFQUERY_COUNTER_DATA_UINT64_INTEL	glcorearb.h	4607;"	d
GL_PERFQUERY_COUNTER_DESC_LENGTH_MAX_INTEL	glcorearb.h	4613;"	d
GL_PERFQUERY_COUNTER_DURATION_NORM_INTEL	glcorearb.h	4601;"	d
GL_PERFQUERY_COUNTER_DURATION_RAW_INTEL	glcorearb.h	4602;"	d
GL_PERFQUERY_COUNTER_EVENT_INTEL	glcorearb.h	4600;"	d
GL_PERFQUERY_COUNTER_NAME_LENGTH_MAX_INTEL	glcorearb.h	4612;"	d
GL_PERFQUERY_COUNTER_RAW_INTEL	glcorearb.h	4604;"	d
GL_PERFQUERY_COUNTER_THROUGHPUT_INTEL	glcorearb.h	4603;"	d
GL_PERFQUERY_COUNTER_TIMESTAMP_INTEL	glcorearb.h	4605;"	d
GL_PERFQUERY_DONOT_FLUSH_INTEL	glcorearb.h	4599;"	d
GL_PERFQUERY_FLUSH_INTEL	glcorearb.h	4598;"	d
GL_PERFQUERY_GLOBAL_CONTEXT_INTEL	glcorearb.h	4596;"	d
GL_PERFQUERY_GPA_EXTENDED_COUNTERS_INTEL	glcorearb.h	4614;"	d
GL_PERFQUERY_QUERY_NAME_LENGTH_MAX_INTEL	glcorearb.h	4611;"	d
GL_PERFQUERY_SINGLE_CONTEXT_INTEL	glcorearb.h	4595;"	d
GL_PERFQUERY_WAIT_INTEL	glcorearb.h	4597;"	d
GL_PINLIGHT_NV	glcorearb.h	4726;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	glcorearb.h	2163;"	d
GL_PIXEL_PACK_BUFFER	glcorearb.h	965;"	d
GL_PIXEL_PACK_BUFFER_ARB	glcorearb.h	3393;"	d
GL_PIXEL_PACK_BUFFER_BINDING	glcorearb.h	967;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	glcorearb.h	3395;"	d
GL_PIXEL_UNPACK_BUFFER	glcorearb.h	966;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	glcorearb.h	3394;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	glcorearb.h	968;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	glcorearb.h	3396;"	d
GL_PLUS_CLAMPED_ALPHA_NV	glcorearb.h	4727;"	d
GL_PLUS_CLAMPED_NV	glcorearb.h	4728;"	d
GL_PLUS_DARKER_NV	glcorearb.h	4729;"	d
GL_PLUS_NV	glcorearb.h	4730;"	d
GL_POINT	glcorearb.h	241;"	d
GL_POINTS	glcorearb.h	95;"	d
GL_POINT_FADE_THRESHOLD_SIZE	glcorearb.h	569;"	d
GL_POINT_SIZE	glcorearb.h	139;"	d
GL_POINT_SIZE_GRANULARITY	glcorearb.h	141;"	d
GL_POINT_SIZE_RANGE	glcorearb.h	140;"	d
GL_POINT_SPRITE_COORD_ORIGIN	glcorearb.h	767;"	d
GL_POLYGON_MODE	glcorearb.h	146;"	d
GL_POLYGON_OFFSET_CLAMP_EXT	glcorearb.h	4505;"	d
GL_POLYGON_OFFSET_COMMAND_NV	glcorearb.h	4782;"	d
GL_POLYGON_OFFSET_FACTOR	glcorearb.h	372;"	d
GL_POLYGON_OFFSET_FILL	glcorearb.h	371;"	d
GL_POLYGON_OFFSET_LINE	glcorearb.h	370;"	d
GL_POLYGON_OFFSET_POINT	glcorearb.h	369;"	d
GL_POLYGON_OFFSET_UNITS	glcorearb.h	368;"	d
GL_POLYGON_SMOOTH	glcorearb.h	147;"	d
GL_POLYGON_SMOOTH_HINT	glcorearb.h	180;"	d
GL_PRIMITIVES_GENERATED	glcorearb.h	1045;"	d
GL_PRIMITIVES_SUBMITTED_ARB	glcorearb.h	3380;"	d
GL_PRIMITIVE_BOUNDING_BOX_ARB	glcorearb.h	2906;"	d
GL_PRIMITIVE_RESTART	glcorearb.h	1429;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	glcorearb.h	2269;"	d
GL_PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED	glcorearb.h	2608;"	d
GL_PRIMITIVE_RESTART_INDEX	glcorearb.h	1430;"	d
GL_PROGRAM	glcorearb.h	2320;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_ARB	glcorearb.h	3459;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_NV	glcorearb.h	5343;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_ARB	glcorearb.h	3457;"	d
GL_PROGRAMMABLE_SAMPLE_LOCATION_TABLE_SIZE_NV	glcorearb.h	5341;"	d
GL_PROGRAM_BINARY_FORMATS	glcorearb.h	1916;"	d
GL_PROGRAM_BINARY_LENGTH	glcorearb.h	1914;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	glcorearb.h	1913;"	d
GL_PROGRAM_INPUT	glcorearb.h	2437;"	d
GL_PROGRAM_MATRIX_EXT	glcorearb.h	3976;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	glcorearb.h	3978;"	d
GL_PROGRAM_OBJECT_EXT	glcorearb.h	3949;"	d
GL_PROGRAM_OUTPUT	glcorearb.h	2438;"	d
GL_PROGRAM_PIPELINE	glcorearb.h	2322;"	d
GL_PROGRAM_PIPELINE_BINDING	glcorearb.h	1925;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	glcorearb.h	3948;"	d
GL_PROGRAM_POINT_SIZE	glcorearb.h	1542;"	d
GL_PROGRAM_POINT_SIZE_ARB	glcorearb.h	3166;"	d
GL_PROGRAM_SEPARABLE	glcorearb.h	1923;"	d
GL_PROVOKING_VERTEX	glcorearb.h	1562;"	d
GL_PROXY_TEXTURE_1D	glcorearb.h	381;"	d
GL_PROXY_TEXTURE_1D_ARRAY	glcorearb.h	1029;"	d
GL_PROXY_TEXTURE_2D	glcorearb.h	382;"	d
GL_PROXY_TEXTURE_2D_ARRAY	glcorearb.h	1031;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	glcorearb.h	1584;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	glcorearb.h	1586;"	d
GL_PROXY_TEXTURE_3D	glcorearb.h	443;"	d
GL_PROXY_TEXTURE_CUBE_MAP	glcorearb.h	531;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	glcorearb.h	1728;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	glcorearb.h	3686;"	d
GL_PROXY_TEXTURE_RECTANGLE	glcorearb.h	1418;"	d
GL_QUADRATIC_CURVE_TO_NV	glcorearb.h	5136;"	d
GL_QUADS	glcorearb.h	102;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	glcorearb.h	1559;"	d
GL_QUERY	glcorearb.h	2321;"	d
GL_QUERY_BUFFER	glcorearb.h	2621;"	d
GL_QUERY_BUFFER_BARRIER_BIT	glcorearb.h	2622;"	d
GL_QUERY_BUFFER_BINDING	glcorearb.h	2623;"	d
GL_QUERY_BY_REGION_NO_WAIT	glcorearb.h	1096;"	d
GL_QUERY_BY_REGION_NO_WAIT_INVERTED	glcorearb.h	2658;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	glcorearb.h	4830;"	d
GL_QUERY_BY_REGION_WAIT	glcorearb.h	1095;"	d
GL_QUERY_BY_REGION_WAIT_INVERTED	glcorearb.h	2657;"	d
GL_QUERY_BY_REGION_WAIT_NV	glcorearb.h	4829;"	d
GL_QUERY_COUNTER_BITS	glcorearb.h	619;"	d
GL_QUERY_NO_WAIT	glcorearb.h	1094;"	d
GL_QUERY_NO_WAIT_INVERTED	glcorearb.h	2656;"	d
GL_QUERY_NO_WAIT_NV	glcorearb.h	4828;"	d
GL_QUERY_OBJECT_EXT	glcorearb.h	3952;"	d
GL_QUERY_RESULT	glcorearb.h	621;"	d
GL_QUERY_RESULT_AVAILABLE	glcorearb.h	622;"	d
GL_QUERY_RESULT_NO_WAIT	glcorearb.h	2624;"	d
GL_QUERY_TARGET	glcorearb.h	2662;"	d
GL_QUERY_WAIT	glcorearb.h	1093;"	d
GL_QUERY_WAIT_INVERTED	glcorearb.h	2655;"	d
GL_QUERY_WAIT_NV	glcorearb.h	4827;"	d
GL_R11F_G11F_B10F	glcorearb.h	1034;"	d
GL_R16	glcorearb.h	1211;"	d
GL_R16F	glcorearb.h	1214;"	d
GL_R16I	glcorearb.h	1220;"	d
GL_R16UI	glcorearb.h	1221;"	d
GL_R16_SNORM	glcorearb.h	1424;"	d
GL_R32F	glcorearb.h	1215;"	d
GL_R32I	glcorearb.h	1222;"	d
GL_R32UI	glcorearb.h	1223;"	d
GL_R3_G3_B2	glcorearb.h	383;"	d
GL_R8	glcorearb.h	1210;"	d
GL_R8I	glcorearb.h	1218;"	d
GL_R8UI	glcorearb.h	1219;"	d
GL_R8_SNORM	glcorearb.h	1420;"	d
GL_RASTERIZER_DISCARD	glcorearb.h	1047;"	d
GL_RASTER_FIXED_SAMPLE_LOCATIONS_EXT	glcorearb.h	4521;"	d
GL_RASTER_MULTISAMPLE_EXT	glcorearb.h	4518;"	d
GL_RASTER_SAMPLES_EXT	glcorearb.h	4519;"	d
GL_READ_BUFFER	glcorearb.h	172;"	d
GL_READ_FRAMEBUFFER	glcorearb.h	1129;"	d
GL_READ_FRAMEBUFFER_BINDING	glcorearb.h	1131;"	d
GL_READ_ONLY	glcorearb.h	628;"	d
GL_READ_PIXELS	glcorearb.h	2366;"	d
GL_READ_PIXELS_FORMAT	glcorearb.h	2367;"	d
GL_READ_PIXELS_TYPE	glcorearb.h	2368;"	d
GL_READ_WRITE	glcorearb.h	630;"	d
GL_RECT_NV	glcorearb.h	5155;"	d
GL_RED	glcorearb.h	235;"	d
GL_RED_INTEGER	glcorearb.h	1066;"	d
GL_RED_NV	glcorearb.h	4731;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	glcorearb.h	2476;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	glcorearb.h	2475;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	glcorearb.h	2474;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	glcorearb.h	2472;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	glcorearb.h	2473;"	d
GL_REFERENCED_BY_VERTEX_SHADER	glcorearb.h	2471;"	d
GL_RELATIVE_ARC_TO_NV	glcorearb.h	5160;"	d
GL_RELATIVE_CONIC_CURVE_TO_NV	glcorearb.h	5199;"	d
GL_RELATIVE_CUBIC_CURVE_TO_NV	glcorearb.h	5139;"	d
GL_RELATIVE_HORIZONTAL_LINE_TO_NV	glcorearb.h	5133;"	d
GL_RELATIVE_LARGE_CCW_ARC_TO_NV	glcorearb.h	5149;"	d
GL_RELATIVE_LARGE_CW_ARC_TO_NV	glcorearb.h	5151;"	d
GL_RELATIVE_LINE_TO_NV	glcorearb.h	5131;"	d
GL_RELATIVE_MOVE_TO_NV	glcorearb.h	5129;"	d
GL_RELATIVE_QUADRATIC_CURVE_TO_NV	glcorearb.h	5137;"	d
GL_RELATIVE_RECT_NV	glcorearb.h	5193;"	d
GL_RELATIVE_ROUNDED_RECT2_NV	glcorearb.h	5188;"	d
GL_RELATIVE_ROUNDED_RECT4_NV	glcorearb.h	5190;"	d
GL_RELATIVE_ROUNDED_RECT8_NV	glcorearb.h	5192;"	d
GL_RELATIVE_ROUNDED_RECT_NV	glcorearb.h	5186;"	d
GL_RELATIVE_SMALL_CCW_ARC_TO_NV	glcorearb.h	5145;"	d
GL_RELATIVE_SMALL_CW_ARC_TO_NV	glcorearb.h	5147;"	d
GL_RELATIVE_SMOOTH_CUBIC_CURVE_TO_NV	glcorearb.h	5143;"	d
GL_RELATIVE_SMOOTH_QUADRATIC_CURVE_TO_NV	glcorearb.h	5141;"	d
GL_RELATIVE_VERTICAL_LINE_TO_NV	glcorearb.h	5135;"	d
GL_RENDERBUFFER	glcorearb.h	1180;"	d
GL_RENDERBUFFER_ALPHA_SIZE	glcorearb.h	1191;"	d
GL_RENDERBUFFER_BINDING	glcorearb.h	1128;"	d
GL_RENDERBUFFER_BLUE_SIZE	glcorearb.h	1190;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	glcorearb.h	4932;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	glcorearb.h	4931;"	d
GL_RENDERBUFFER_DEPTH_SIZE	glcorearb.h	1192;"	d
GL_RENDERBUFFER_GREEN_SIZE	glcorearb.h	1189;"	d
GL_RENDERBUFFER_HEIGHT	glcorearb.h	1182;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	glcorearb.h	1183;"	d
GL_RENDERBUFFER_RED_SIZE	glcorearb.h	1188;"	d
GL_RENDERBUFFER_SAMPLES	glcorearb.h	1132;"	d
GL_RENDERBUFFER_STENCIL_SIZE	glcorearb.h	1193;"	d
GL_RENDERBUFFER_WIDTH	glcorearb.h	1181;"	d
GL_RENDERER	glcorearb.h	249;"	d
GL_REPEAT	glcorearb.h	262;"	d
GL_REPLACE	glcorearb.h	245;"	d
GL_RESET_NOTIFICATION_STRATEGY	glcorearb.h	2666;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	glcorearb.h	3426;"	d
GL_RESTART_PATH_NV	glcorearb.h	5152;"	d
GL_RG	glcorearb.h	1208;"	d
GL_RG16	glcorearb.h	1213;"	d
GL_RG16F	glcorearb.h	1216;"	d
GL_RG16I	glcorearb.h	1226;"	d
GL_RG16UI	glcorearb.h	1227;"	d
GL_RG16_SNORM	glcorearb.h	1425;"	d
GL_RG32F	glcorearb.h	1217;"	d
GL_RG32I	glcorearb.h	1228;"	d
GL_RG32UI	glcorearb.h	1229;"	d
GL_RG8	glcorearb.h	1212;"	d
GL_RG8I	glcorearb.h	1224;"	d
GL_RG8UI	glcorearb.h	1225;"	d
GL_RG8_SNORM	glcorearb.h	1421;"	d
GL_RGB	glcorearb.h	239;"	d
GL_RGB10	glcorearb.h	387;"	d
GL_RGB10_A2	glcorearb.h	394;"	d
GL_RGB10_A2UI	glcorearb.h	1651;"	d
GL_RGB12	glcorearb.h	388;"	d
GL_RGB16	glcorearb.h	389;"	d
GL_RGB16F	glcorearb.h	1020;"	d
GL_RGB16I	glcorearb.h	1063;"	d
GL_RGB16UI	glcorearb.h	1057;"	d
GL_RGB16_SNORM	glcorearb.h	1426;"	d
GL_RGB32F	glcorearb.h	1018;"	d
GL_RGB32I	glcorearb.h	1061;"	d
GL_RGB32UI	glcorearb.h	1055;"	d
GL_RGB4	glcorearb.h	384;"	d
GL_RGB5	glcorearb.h	385;"	d
GL_RGB565	glcorearb.h	1912;"	d
GL_RGB5_A1	glcorearb.h	392;"	d
GL_RGB8	glcorearb.h	386;"	d
GL_RGB8I	glcorearb.h	1065;"	d
GL_RGB8UI	glcorearb.h	1059;"	d
GL_RGB8_SNORM	glcorearb.h	1422;"	d
GL_RGB9_E5	glcorearb.h	1036;"	d
GL_RGBA	glcorearb.h	240;"	d
GL_RGBA12	glcorearb.h	395;"	d
GL_RGBA16	glcorearb.h	396;"	d
GL_RGBA16F	glcorearb.h	1019;"	d
GL_RGBA16I	glcorearb.h	1062;"	d
GL_RGBA16UI	glcorearb.h	1056;"	d
GL_RGBA16_SNORM	glcorearb.h	1427;"	d
GL_RGBA2	glcorearb.h	390;"	d
GL_RGBA32F	glcorearb.h	1017;"	d
GL_RGBA32I	glcorearb.h	1060;"	d
GL_RGBA32UI	glcorearb.h	1054;"	d
GL_RGBA4	glcorearb.h	391;"	d
GL_RGBA8	glcorearb.h	393;"	d
GL_RGBA8I	glcorearb.h	1064;"	d
GL_RGBA8UI	glcorearb.h	1058;"	d
GL_RGBA8_SNORM	glcorearb.h	1423;"	d
GL_RGBA_INTEGER	glcorearb.h	1070;"	d
GL_RGB_422_APPLE	glcorearb.h	3940;"	d
GL_RGB_INTEGER	glcorearb.h	1069;"	d
GL_RGB_RAW_422_APPLE	glcorearb.h	3943;"	d
GL_RG_INTEGER	glcorearb.h	1209;"	d
GL_RIGHT	glcorearb.h	130;"	d
GL_ROUNDED_RECT2_NV	glcorearb.h	5187;"	d
GL_ROUNDED_RECT4_NV	glcorearb.h	5189;"	d
GL_ROUNDED_RECT8_NV	glcorearb.h	5191;"	d
GL_ROUNDED_RECT_NV	glcorearb.h	5185;"	d
GL_ROUND_NV	glcorearb.h	5104;"	d
GL_SAMPLER	glcorearb.h	2323;"	d
GL_SAMPLER_1D	glcorearb.h	747;"	d
GL_SAMPLER_1D_ARRAY	glcorearb.h	1073;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	glcorearb.h	1075;"	d
GL_SAMPLER_1D_SHADOW	glcorearb.h	751;"	d
GL_SAMPLER_2D	glcorearb.h	748;"	d
GL_SAMPLER_2D_ARRAY	glcorearb.h	1074;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	glcorearb.h	1076;"	d
GL_SAMPLER_2D_MULTISAMPLE	glcorearb.h	1591;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	glcorearb.h	1594;"	d
GL_SAMPLER_2D_RECT	glcorearb.h	1405;"	d
GL_SAMPLER_2D_RECT_SHADOW	glcorearb.h	1406;"	d
GL_SAMPLER_2D_SHADOW	glcorearb.h	752;"	d
GL_SAMPLER_3D	glcorearb.h	749;"	d
GL_SAMPLER_BINDING	glcorearb.h	1650;"	d
GL_SAMPLER_BUFFER	glcorearb.h	1407;"	d
GL_SAMPLER_CUBE	glcorearb.h	750;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	glcorearb.h	1729;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	glcorearb.h	3687;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	glcorearb.h	1730;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	glcorearb.h	3688;"	d
GL_SAMPLER_CUBE_SHADOW	glcorearb.h	1077;"	d
GL_SAMPLES	glcorearb.h	520;"	d
GL_SAMPLES_PASSED	glcorearb.h	643;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	glcorearb.h	516;"	d
GL_SAMPLE_ALPHA_TO_ONE	glcorearb.h	517;"	d
GL_SAMPLE_BUFFERS	glcorearb.h	519;"	d
GL_SAMPLE_COVERAGE	glcorearb.h	518;"	d
GL_SAMPLE_COVERAGE_INVERT	glcorearb.h	522;"	d
GL_SAMPLE_COVERAGE_VALUE	glcorearb.h	521;"	d
GL_SAMPLE_LOCATION_ARB	glcorearb.h	3458;"	d
GL_SAMPLE_LOCATION_NV	glcorearb.h	5342;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_ARB	glcorearb.h	3456;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_HEIGHT_NV	glcorearb.h	5340;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_ARB	glcorearb.h	3455;"	d
GL_SAMPLE_LOCATION_PIXEL_GRID_WIDTH_NV	glcorearb.h	5339;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_ARB	glcorearb.h	3454;"	d
GL_SAMPLE_LOCATION_SUBPIXEL_BITS_NV	glcorearb.h	5338;"	d
GL_SAMPLE_MASK	glcorearb.h	1580;"	d
GL_SAMPLE_MASK_VALUE	glcorearb.h	1581;"	d
GL_SAMPLE_POSITION	glcorearb.h	1579;"	d
GL_SAMPLE_SHADING	glcorearb.h	1722;"	d
GL_SAMPLE_SHADING_ARB	glcorearb.h	3474;"	d
GL_SCISSOR_BOX	glcorearb.h	173;"	d
GL_SCISSOR_COMMAND_NV	glcorearb.h	4785;"	d
GL_SCISSOR_TEST	glcorearb.h	174;"	d
GL_SCREEN_KHR	glcorearb.h	3816;"	d
GL_SCREEN_NV	glcorearb.h	4732;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	glcorearb.h	5507;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	glcorearb.h	5517;"	d
GL_SEPARATE_ATTRIBS	glcorearb.h	1051;"	d
GL_SET	glcorearb.h	228;"	d
GL_SHADER	glcorearb.h	2319;"	d
GL_SHADER_BINARY_FORMATS	glcorearb.h	1907;"	d
GL_SHADER_BINARY_FORMAT_SPIR_V_ARB	glcorearb.h	3202;"	d
GL_SHADER_COMPILER	glcorearb.h	1906;"	d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	glcorearb.h	5419;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	glcorearb.h	2161;"	d
GL_SHADER_IMAGE_ATOMIC	glcorearb.h	2391;"	d
GL_SHADER_IMAGE_LOAD	glcorearb.h	2389;"	d
GL_SHADER_IMAGE_STORE	glcorearb.h	2390;"	d
GL_SHADER_INCLUDE_ARB	glcorearb.h	3564;"	d
GL_SHADER_OBJECT_EXT	glcorearb.h	3950;"	d
GL_SHADER_SOURCE_LENGTH	glcorearb.h	761;"	d
GL_SHADER_STORAGE_BARRIER_BIT	glcorearb.h	2496;"	d
GL_SHADER_STORAGE_BLOCK	glcorearb.h	2440;"	d
GL_SHADER_STORAGE_BUFFER	glcorearb.h	2482;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	glcorearb.h	2483;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	glcorearb.h	2495;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	glcorearb.h	2485;"	d
GL_SHADER_STORAGE_BUFFER_START	glcorearb.h	2484;"	d
GL_SHADER_TYPE	glcorearb.h	733;"	d
GL_SHADING_LANGUAGE_VERSION	glcorearb.h	765;"	d
GL_SHARED_EDGE_NV	glcorearb.h	5333;"	d
GL_SHIMS_HPP	gl_shims.cpp	9;"	d	file:
GL_SHIMS_HPP	gl_shims.hpp	2;"	d
GL_SHORT	glcorearb.h	206;"	d
GL_SIGNALED	glcorearb.h	1572;"	d
GL_SIGNED_NORMALIZED	glcorearb.h	1428;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	glcorearb.h	2396;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	glcorearb.h	2398;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	glcorearb.h	2397;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	glcorearb.h	2399;"	d
GL_SKIP_DECODE_EXT	glcorearb.h	4563;"	d
GL_SKIP_MISSING_GLYPH_NV	glcorearb.h	5109;"	d
GL_SMALL_CCW_ARC_TO_NV	glcorearb.h	5144;"	d
GL_SMALL_CW_ARC_TO_NV	glcorearb.h	5146;"	d
GL_SMOOTH_CUBIC_CURVE_TO_NV	glcorearb.h	5142;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	glcorearb.h	466;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	glcorearb.h	465;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	glcorearb.h	464;"	d
GL_SMOOTH_POINT_SIZE_RANGE	glcorearb.h	463;"	d
GL_SMOOTH_QUADRATIC_CURVE_TO_NV	glcorearb.h	5140;"	d
GL_SM_COUNT_NV	glcorearb.h	5426;"	d
GL_SOFTLIGHT_KHR	glcorearb.h	3823;"	d
GL_SOFTLIGHT_NV	glcorearb.h	4733;"	d
GL_SPARSE_BUFFER_PAGE_SIZE_ARB	glcorearb.h	3590;"	d
GL_SPARSE_STORAGE_BIT_ARB	glcorearb.h	3589;"	d
GL_SPARSE_TEXTURE_FULL_ARRAY_CUBE_MIPMAPS_ARB	glcorearb.h	3613;"	d
GL_SPIR_V_BINARY_ARB	glcorearb.h	3203;"	d
GL_SQUARE_NV	glcorearb.h	5103;"	d
GL_SRC1_ALPHA	glcorearb.h	644;"	d
GL_SRC1_COLOR	glcorearb.h	1645;"	d
GL_SRC_ALPHA	glcorearb.h	115;"	d
GL_SRC_ALPHA_SATURATE	glcorearb.h	121;"	d
GL_SRC_ATOP_NV	glcorearb.h	4734;"	d
GL_SRC_COLOR	glcorearb.h	113;"	d
GL_SRC_IN_NV	glcorearb.h	4735;"	d
GL_SRC_NV	glcorearb.h	4736;"	d
GL_SRC_OUT_NV	glcorearb.h	4737;"	d
GL_SRC_OVER_NV	glcorearb.h	4738;"	d
GL_SRGB	glcorearb.h	975;"	d
GL_SRGB8	glcorearb.h	976;"	d
GL_SRGB8_ALPHA8	glcorearb.h	978;"	d
GL_SRGB_ALPHA	glcorearb.h	977;"	d
GL_SRGB_DECODE_ARB	glcorearb.h	3340;"	d
GL_SRGB_READ	glcorearb.h	2377;"	d
GL_SRGB_WRITE	glcorearb.h	2378;"	d
GL_STACK_OVERFLOW	glcorearb.h	211;"	d
GL_STACK_UNDERFLOW	glcorearb.h	212;"	d
GL_STANDARD_FONT_FORMAT_NV	glcorearb.h	5201;"	d
GL_STANDARD_FONT_NAME_NV	glcorearb.h	5062;"	d
GL_STATIC_COPY	glcorearb.h	639;"	d
GL_STATIC_DRAW	glcorearb.h	637;"	d
GL_STATIC_READ	glcorearb.h	638;"	d
GL_STENCIL	glcorearb.h	232;"	d
GL_STENCIL_ATTACHMENT	glcorearb.h	1178;"	d
GL_STENCIL_BACK_FAIL	glcorearb.h	702;"	d
GL_STENCIL_BACK_FUNC	glcorearb.h	701;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	glcorearb.h	703;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	glcorearb.h	704;"	d
GL_STENCIL_BACK_REF	glcorearb.h	770;"	d
GL_STENCIL_BACK_VALUE_MASK	glcorearb.h	771;"	d
GL_STENCIL_BACK_WRITEMASK	glcorearb.h	772;"	d
GL_STENCIL_BUFFER_BIT	glcorearb.h	91;"	d
GL_STENCIL_CLEAR_VALUE	glcorearb.h	157;"	d
GL_STENCIL_COMPONENTS	glcorearb.h	2359;"	d
GL_STENCIL_FAIL	glcorearb.h	160;"	d
GL_STENCIL_FUNC	glcorearb.h	158;"	d
GL_STENCIL_INDEX	glcorearb.h	233;"	d
GL_STENCIL_INDEX1	glcorearb.h	1184;"	d
GL_STENCIL_INDEX16	glcorearb.h	1187;"	d
GL_STENCIL_INDEX4	glcorearb.h	1185;"	d
GL_STENCIL_INDEX8	glcorearb.h	1186;"	d
GL_STENCIL_PASS_DEPTH_FAIL	glcorearb.h	161;"	d
GL_STENCIL_PASS_DEPTH_PASS	glcorearb.h	162;"	d
GL_STENCIL_REF	glcorearb.h	163;"	d
GL_STENCIL_REF_COMMAND_NV	glcorearb.h	4780;"	d
GL_STENCIL_RENDERABLE	glcorearb.h	2362;"	d
GL_STENCIL_SAMPLES_NV	glcorearb.h	4914;"	d
GL_STENCIL_TEST	glcorearb.h	156;"	d
GL_STENCIL_VALUE_MASK	glcorearb.h	159;"	d
GL_STENCIL_WRITEMASK	glcorearb.h	164;"	d
GL_STEREO	glcorearb.h	178;"	d
GL_STREAM_COPY	glcorearb.h	636;"	d
GL_STREAM_DRAW	glcorearb.h	634;"	d
GL_STREAM_READ	glcorearb.h	635;"	d
GL_SUBPIXEL_BITS	glcorearb.h	195;"	d
GL_SUBPIXEL_PRECISION_BIAS_X_BITS_NV	glcorearb.h	4842;"	d
GL_SUBPIXEL_PRECISION_BIAS_Y_BITS_NV	glcorearb.h	4843;"	d
GL_SUPERSAMPLE_SCALE_X_NV	glcorearb.h	5049;"	d
GL_SUPERSAMPLE_SCALE_Y_NV	glcorearb.h	5050;"	d
GL_SYNC_CL_EVENT_ARB	glcorearb.h	2979;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	glcorearb.h	2980;"	d
GL_SYNC_CONDITION	glcorearb.h	1566;"	d
GL_SYNC_FENCE	glcorearb.h	1569;"	d
GL_SYNC_FLAGS	glcorearb.h	1568;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	glcorearb.h	1578;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	glcorearb.h	1570;"	d
GL_SYNC_STATUS	glcorearb.h	1567;"	d
GL_SYSTEM_FONT_NAME_NV	glcorearb.h	5063;"	d
GL_TERMINATE_SEQUENCE_COMMAND_NV	glcorearb.h	4768;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	glcorearb.h	1766;"	d
GL_TESS_CONTROL_SHADER	glcorearb.h	1793;"	d
GL_TESS_CONTROL_SHADER_BIT	glcorearb.h	1920;"	d
GL_TESS_CONTROL_SHADER_PATCHES_ARB	glcorearb.h	3382;"	d
GL_TESS_CONTROL_SUBROUTINE	glcorearb.h	2442;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	glcorearb.h	2448;"	d
GL_TESS_CONTROL_TEXTURE	glcorearb.h	2381;"	d
GL_TESS_EVALUATION_SHADER	glcorearb.h	1792;"	d
GL_TESS_EVALUATION_SHADER_BIT	glcorearb.h	1921;"	d
GL_TESS_EVALUATION_SHADER_INVOCATIONS_ARB	glcorearb.h	3383;"	d
GL_TESS_EVALUATION_SUBROUTINE	glcorearb.h	2443;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	glcorearb.h	2449;"	d
GL_TESS_EVALUATION_TEXTURE	glcorearb.h	2382;"	d
GL_TESS_GEN_MODE	glcorearb.h	1767;"	d
GL_TESS_GEN_POINT_MODE	glcorearb.h	1770;"	d
GL_TESS_GEN_SPACING	glcorearb.h	1768;"	d
GL_TESS_GEN_VERTEX_ORDER	glcorearb.h	1769;"	d
GL_TEXTURE	glcorearb.h	229;"	d
GL_TEXTURE0	glcorearb.h	482;"	d
GL_TEXTURE1	glcorearb.h	483;"	d
GL_TEXTURE10	glcorearb.h	492;"	d
GL_TEXTURE11	glcorearb.h	493;"	d
GL_TEXTURE12	glcorearb.h	494;"	d
GL_TEXTURE13	glcorearb.h	495;"	d
GL_TEXTURE14	glcorearb.h	496;"	d
GL_TEXTURE15	glcorearb.h	497;"	d
GL_TEXTURE16	glcorearb.h	498;"	d
GL_TEXTURE17	glcorearb.h	499;"	d
GL_TEXTURE18	glcorearb.h	500;"	d
GL_TEXTURE19	glcorearb.h	501;"	d
GL_TEXTURE2	glcorearb.h	484;"	d
GL_TEXTURE20	glcorearb.h	502;"	d
GL_TEXTURE21	glcorearb.h	503;"	d
GL_TEXTURE22	glcorearb.h	504;"	d
GL_TEXTURE23	glcorearb.h	505;"	d
GL_TEXTURE24	glcorearb.h	506;"	d
GL_TEXTURE25	glcorearb.h	507;"	d
GL_TEXTURE26	glcorearb.h	508;"	d
GL_TEXTURE27	glcorearb.h	509;"	d
GL_TEXTURE28	glcorearb.h	510;"	d
GL_TEXTURE29	glcorearb.h	511;"	d
GL_TEXTURE3	glcorearb.h	485;"	d
GL_TEXTURE30	glcorearb.h	512;"	d
GL_TEXTURE31	glcorearb.h	513;"	d
GL_TEXTURE4	glcorearb.h	486;"	d
GL_TEXTURE5	glcorearb.h	487;"	d
GL_TEXTURE6	glcorearb.h	488;"	d
GL_TEXTURE7	glcorearb.h	489;"	d
GL_TEXTURE8	glcorearb.h	490;"	d
GL_TEXTURE9	glcorearb.h	491;"	d
GL_TEXTURE_1D	glcorearb.h	196;"	d
GL_TEXTURE_1D_ARRAY	glcorearb.h	1028;"	d
GL_TEXTURE_2D	glcorearb.h	197;"	d
GL_TEXTURE_2D_ARRAY	glcorearb.h	1030;"	d
GL_TEXTURE_2D_MULTISAMPLE	glcorearb.h	1583;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	glcorearb.h	1585;"	d
GL_TEXTURE_3D	glcorearb.h	442;"	d
GL_TEXTURE_ALPHA_SIZE	glcorearb.h	379;"	d
GL_TEXTURE_ALPHA_TYPE	glcorearb.h	1123;"	d
GL_TEXTURE_BASE_LEVEL	glcorearb.h	461;"	d
GL_TEXTURE_BINDING_1D	glcorearb.h	373;"	d
GL_TEXTURE_BINDING_1D_ARRAY	glcorearb.h	1032;"	d
GL_TEXTURE_BINDING_2D	glcorearb.h	374;"	d
GL_TEXTURE_BINDING_2D_ARRAY	glcorearb.h	1033;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	glcorearb.h	1587;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	glcorearb.h	1588;"	d
GL_TEXTURE_BINDING_3D	glcorearb.h	437;"	d
GL_TEXTURE_BINDING_BUFFER	glcorearb.h	1414;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	glcorearb.h	3653;"	d
GL_TEXTURE_BINDING_CUBE_MAP	glcorearb.h	524;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	glcorearb.h	1727;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	glcorearb.h	3685;"	d
GL_TEXTURE_BINDING_RECTANGLE	glcorearb.h	1417;"	d
GL_TEXTURE_BLUE_SIZE	glcorearb.h	378;"	d
GL_TEXTURE_BLUE_TYPE	glcorearb.h	1122;"	d
GL_TEXTURE_BORDER_COLOR	glcorearb.h	200;"	d
GL_TEXTURE_BUFFER	glcorearb.h	1412;"	d
GL_TEXTURE_BUFFER_ARB	glcorearb.h	3651;"	d
GL_TEXTURE_BUFFER_BINDING	glcorearb.h	2609;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	glcorearb.h	1415;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	glcorearb.h	3654;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	glcorearb.h	3655;"	d
GL_TEXTURE_BUFFER_OFFSET	glcorearb.h	2499;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	glcorearb.h	2501;"	d
GL_TEXTURE_BUFFER_SIZE	glcorearb.h	2500;"	d
GL_TEXTURE_COMPARE_FUNC	glcorearb.h	580;"	d
GL_TEXTURE_COMPARE_MODE	glcorearb.h	579;"	d
GL_TEXTURE_COMPRESSED	glcorearb.h	537;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	glcorearb.h	2401;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	glcorearb.h	2402;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	glcorearb.h	2400;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	glcorearb.h	536;"	d
GL_TEXTURE_COMPRESSION_HINT	glcorearb.h	535;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	glcorearb.h	5505;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	glcorearb.h	5515;"	d
GL_TEXTURE_CUBE_MAP	glcorearb.h	523;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	glcorearb.h	1726;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	glcorearb.h	3684;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	glcorearb.h	526;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	glcorearb.h	528;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	glcorearb.h	530;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	glcorearb.h	525;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	glcorearb.h	527;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	glcorearb.h	529;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	glcorearb.h	1563;"	d
GL_TEXTURE_DEPTH	glcorearb.h	444;"	d
GL_TEXTURE_DEPTH_SIZE	glcorearb.h	578;"	d
GL_TEXTURE_DEPTH_TYPE	glcorearb.h	1124;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	glcorearb.h	2160;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	glcorearb.h	1590;"	d
GL_TEXTURE_GATHER	glcorearb.h	2387;"	d
GL_TEXTURE_GATHER_SHADOW	glcorearb.h	2388;"	d
GL_TEXTURE_GREEN_SIZE	glcorearb.h	377;"	d
GL_TEXTURE_GREEN_TYPE	glcorearb.h	1121;"	d
GL_TEXTURE_HEIGHT	glcorearb.h	199;"	d
GL_TEXTURE_IMAGE_FORMAT	glcorearb.h	2369;"	d
GL_TEXTURE_IMAGE_TYPE	glcorearb.h	2370;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	glcorearb.h	2225;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	glcorearb.h	2506;"	d
GL_TEXTURE_INTERNAL_FORMAT	glcorearb.h	375;"	d
GL_TEXTURE_LOD_BIAS	glcorearb.h	575;"	d
GL_TEXTURE_MAG_FILTER	glcorearb.h	258;"	d
GL_TEXTURE_MAX_LEVEL	glcorearb.h	462;"	d
GL_TEXTURE_MAX_LOD	glcorearb.h	460;"	d
GL_TEXTURE_MIN_FILTER	glcorearb.h	259;"	d
GL_TEXTURE_MIN_LOD	glcorearb.h	459;"	d
GL_TEXTURE_RECTANGLE	glcorearb.h	1416;"	d
GL_TEXTURE_REDUCTION_MODE_ARB	glcorearb.h	3695;"	d
GL_TEXTURE_RED_SIZE	glcorearb.h	376;"	d
GL_TEXTURE_RED_TYPE	glcorearb.h	1120;"	d
GL_TEXTURE_SAMPLES	glcorearb.h	1589;"	d
GL_TEXTURE_SHADOW	glcorearb.h	2386;"	d
GL_TEXTURE_SHARED_SIZE	glcorearb.h	1038;"	d
GL_TEXTURE_SPARSE_ARB	glcorearb.h	3603;"	d
GL_TEXTURE_SRGB_DECODE_EXT	glcorearb.h	4561;"	d
GL_TEXTURE_STENCIL_SIZE	glcorearb.h	1119;"	d
GL_TEXTURE_SWIZZLE_A	glcorearb.h	1655;"	d
GL_TEXTURE_SWIZZLE_B	glcorearb.h	1654;"	d
GL_TEXTURE_SWIZZLE_G	glcorearb.h	1653;"	d
GL_TEXTURE_SWIZZLE_R	glcorearb.h	1652;"	d
GL_TEXTURE_SWIZZLE_RGBA	glcorearb.h	1656;"	d
GL_TEXTURE_TARGET	glcorearb.h	2661;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	glcorearb.h	2164;"	d
GL_TEXTURE_VIEW	glcorearb.h	2404;"	d
GL_TEXTURE_VIEW_MIN_LAYER	glcorearb.h	2504;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	glcorearb.h	2502;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	glcorearb.h	2505;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	glcorearb.h	2503;"	d
GL_TEXTURE_WIDTH	glcorearb.h	198;"	d
GL_TEXTURE_WRAP_R	glcorearb.h	445;"	d
GL_TEXTURE_WRAP_S	glcorearb.h	260;"	d
GL_TEXTURE_WRAP_T	glcorearb.h	261;"	d
GL_TIMEOUT_EXPIRED	glcorearb.h	1574;"	d
GL_TIMEOUT_IGNORED	glcorearb.h	1577;"	d
GL_TIMESTAMP	glcorearb.h	1658;"	d
GL_TIME_ELAPSED	glcorearb.h	1657;"	d
GL_TOP_LEVEL_ARRAY_SIZE	glcorearb.h	2477;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	glcorearb.h	2478;"	d
GL_TRANSFORM_FEEDBACK	glcorearb.h	1794;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	glcorearb.h	2116;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	glcorearb.h	2167;"	d
GL_TRANSFORM_FEEDBACK_BINDING	glcorearb.h	1797;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	glcorearb.h	1052;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	glcorearb.h	1796;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	glcorearb.h	1053;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_INDEX	glcorearb.h	2619;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	glcorearb.h	1040;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	glcorearb.h	1795;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	glcorearb.h	1044;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	glcorearb.h	1043;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_STRIDE	glcorearb.h	2620;"	d
GL_TRANSFORM_FEEDBACK_OVERFLOW_ARB	glcorearb.h	3777;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	glcorearb.h	2117;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	glcorearb.h	1046;"	d
GL_TRANSFORM_FEEDBACK_STREAM_OVERFLOW_ARB	glcorearb.h	3778;"	d
GL_TRANSFORM_FEEDBACK_VARYING	glcorearb.h	2453;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	glcorearb.h	1042;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	glcorearb.h	1039;"	d
GL_TRANSLATE_2D_NV	glcorearb.h	5088;"	d
GL_TRANSLATE_3D_NV	glcorearb.h	5089;"	d
GL_TRANSLATE_X_NV	glcorearb.h	5086;"	d
GL_TRANSLATE_Y_NV	glcorearb.h	5087;"	d
GL_TRANSPOSE_AFFINE_2D_NV	glcorearb.h	5092;"	d
GL_TRANSPOSE_AFFINE_3D_NV	glcorearb.h	5093;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	glcorearb.h	3977;"	d
GL_TRIANGLES	glcorearb.h	99;"	d
GL_TRIANGLES_ADJACENCY	glcorearb.h	1540;"	d
GL_TRIANGLES_ADJACENCY_ARB	glcorearb.h	3164;"	d
GL_TRIANGLE_FAN	glcorearb.h	101;"	d
GL_TRIANGLE_STRIP	glcorearb.h	100;"	d
GL_TRIANGLE_STRIP_ADJACENCY	glcorearb.h	1541;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	glcorearb.h	3165;"	d
GL_TRIANGULAR_NV	glcorearb.h	5105;"	d
GL_TRUE	glcorearb.h	94;"	d
GL_TYPE	glcorearb.h	2459;"	d
GL_UNCORRELATED_NV	glcorearb.h	4739;"	d
GL_UNDEFINED_VERTEX	glcorearb.h	1931;"	d
GL_UNIFORM	glcorearb.h	2435;"	d
GL_UNIFORM_ADDRESS_COMMAND_NV	glcorearb.h	4778;"	d
GL_UNIFORM_ARRAY_STRIDE	glcorearb.h	1454;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	glcorearb.h	2155;"	d
GL_UNIFORM_BARRIER_BIT	glcorearb.h	2159;"	d
GL_UNIFORM_BLOCK	glcorearb.h	2436;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	glcorearb.h	1460;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	glcorearb.h	1461;"	d
GL_UNIFORM_BLOCK_BINDING	glcorearb.h	1457;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	glcorearb.h	1458;"	d
GL_UNIFORM_BLOCK_INDEX	glcorearb.h	1452;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	glcorearb.h	1459;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	glcorearb.h	2285;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	glcorearb.h	1464;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	glcorearb.h	1463;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	glcorearb.h	1790;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	glcorearb.h	1791;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	glcorearb.h	1462;"	d
GL_UNIFORM_BUFFER	glcorearb.h	1433;"	d
GL_UNIFORM_BUFFER_ADDRESS_NV	glcorearb.h	5448;"	d
GL_UNIFORM_BUFFER_BINDING	glcorearb.h	1434;"	d
GL_UNIFORM_BUFFER_LENGTH_NV	glcorearb.h	5449;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	glcorearb.h	1446;"	d
GL_UNIFORM_BUFFER_SIZE	glcorearb.h	1436;"	d
GL_UNIFORM_BUFFER_START	glcorearb.h	1435;"	d
GL_UNIFORM_BUFFER_UNIFIED_NV	glcorearb.h	5447;"	d
GL_UNIFORM_IS_ROW_MAJOR	glcorearb.h	1456;"	d
GL_UNIFORM_MATRIX_STRIDE	glcorearb.h	1455;"	d
GL_UNIFORM_NAME_LENGTH	glcorearb.h	1451;"	d
GL_UNIFORM_OFFSET	glcorearb.h	1453;"	d
GL_UNIFORM_SIZE	glcorearb.h	1450;"	d
GL_UNIFORM_TYPE	glcorearb.h	1449;"	d
GL_UNKNOWN_CONTEXT_RESET	glcorearb.h	2665;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	glcorearb.h	3425;"	d
GL_UNPACK_ALIGNMENT	glcorearb.h	186;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	glcorearb.h	2120;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	glcorearb.h	2119;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	glcorearb.h	2121;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	glcorearb.h	2118;"	d
GL_UNPACK_IMAGE_HEIGHT	glcorearb.h	441;"	d
GL_UNPACK_LSB_FIRST	glcorearb.h	182;"	d
GL_UNPACK_ROW_LENGTH	glcorearb.h	183;"	d
GL_UNPACK_SKIP_IMAGES	glcorearb.h	440;"	d
GL_UNPACK_SKIP_PIXELS	glcorearb.h	185;"	d
GL_UNPACK_SKIP_ROWS	glcorearb.h	184;"	d
GL_UNPACK_SWAP_BYTES	glcorearb.h	181;"	d
GL_UNSIGNALED	glcorearb.h	1571;"	d
GL_UNSIGNED_BYTE	glcorearb.h	205;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	glcorearb.h	447;"	d
GL_UNSIGNED_BYTE_3_3_2	glcorearb.h	432;"	d
GL_UNSIGNED_INT	glcorearb.h	209;"	d
GL_UNSIGNED_INT16_NV	glcorearb.h	4965;"	d
GL_UNSIGNED_INT16_VEC2_NV	glcorearb.h	4966;"	d
GL_UNSIGNED_INT16_VEC3_NV	glcorearb.h	4967;"	d
GL_UNSIGNED_INT16_VEC4_NV	glcorearb.h	4968;"	d
GL_UNSIGNED_INT64_AMD	glcorearb.h	3907;"	d
GL_UNSIGNED_INT64_ARB	glcorearb.h	2930;"	d
GL_UNSIGNED_INT64_NV	glcorearb.h	4949;"	d
GL_UNSIGNED_INT64_VEC2_ARB	glcorearb.h	3224;"	d
GL_UNSIGNED_INT64_VEC2_NV	glcorearb.h	4969;"	d
GL_UNSIGNED_INT64_VEC3_ARB	glcorearb.h	3225;"	d
GL_UNSIGNED_INT64_VEC3_NV	glcorearb.h	4970;"	d
GL_UNSIGNED_INT64_VEC4_ARB	glcorearb.h	3226;"	d
GL_UNSIGNED_INT64_VEC4_NV	glcorearb.h	4971;"	d
GL_UNSIGNED_INT8_NV	glcorearb.h	4961;"	d
GL_UNSIGNED_INT8_VEC2_NV	glcorearb.h	4962;"	d
GL_UNSIGNED_INT8_VEC3_NV	glcorearb.h	4963;"	d
GL_UNSIGNED_INT8_VEC4_NV	glcorearb.h	4964;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	glcorearb.h	1035;"	d
GL_UNSIGNED_INT_10_10_10_2	glcorearb.h	436;"	d
GL_UNSIGNED_INT_24_8	glcorearb.h	1117;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	glcorearb.h	453;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	glcorearb.h	1037;"	d
GL_UNSIGNED_INT_8_8_8_8	glcorearb.h	435;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	glcorearb.h	452;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	glcorearb.h	2156;"	d
GL_UNSIGNED_INT_IMAGE_1D	glcorearb.h	2199;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	glcorearb.h	2205;"	d
GL_UNSIGNED_INT_IMAGE_2D	glcorearb.h	2200;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	glcorearb.h	2206;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	glcorearb.h	2208;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	glcorearb.h	2209;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	glcorearb.h	2202;"	d
GL_UNSIGNED_INT_IMAGE_3D	glcorearb.h	2201;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	glcorearb.h	2204;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	glcorearb.h	2203;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	glcorearb.h	2207;"	d
GL_UNSIGNED_INT_SAMPLER_1D	glcorearb.h	1087;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	glcorearb.h	1091;"	d
GL_UNSIGNED_INT_SAMPLER_2D	glcorearb.h	1088;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	glcorearb.h	1092;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	glcorearb.h	1593;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	glcorearb.h	1596;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	glcorearb.h	1410;"	d
GL_UNSIGNED_INT_SAMPLER_3D	glcorearb.h	1089;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	glcorearb.h	1411;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	glcorearb.h	1090;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	glcorearb.h	1732;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	glcorearb.h	3690;"	d
GL_UNSIGNED_INT_VEC2	glcorearb.h	1078;"	d
GL_UNSIGNED_INT_VEC3	glcorearb.h	1079;"	d
GL_UNSIGNED_INT_VEC4	glcorearb.h	1080;"	d
GL_UNSIGNED_NORMALIZED	glcorearb.h	1125;"	d
GL_UNSIGNED_SHORT	glcorearb.h	207;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	glcorearb.h	451;"	d
GL_UNSIGNED_SHORT_4_4_4_4	glcorearb.h	433;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	glcorearb.h	450;"	d
GL_UNSIGNED_SHORT_5_5_5_1	glcorearb.h	434;"	d
GL_UNSIGNED_SHORT_5_6_5	glcorearb.h	448;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	glcorearb.h	449;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	glcorearb.h	3941;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	glcorearb.h	3942;"	d
GL_UPPER_LEFT	glcorearb.h	769;"	d
GL_USE_MISSING_GLYPH_NV	glcorearb.h	5110;"	d
GL_UTF16_NV	glcorearb.h	5095;"	d
GL_UTF8_NV	glcorearb.h	5094;"	d
GL_VALIDATE_STATUS	glcorearb.h	756;"	d
GL_VENDOR	glcorearb.h	248;"	d
GL_VERSION	glcorearb.h	250;"	d
GL_VERSION_1_0	glcorearb.h	79;"	d
GL_VERSION_1_1	glcorearb.h	364;"	d
GL_VERSION_1_2	glcorearb.h	431;"	d
GL_VERSION_1_3	glcorearb.h	481;"	d
GL_VERSION_1_4	glcorearb.h	564;"	d
GL_VERSION_1_5	glcorearb.h	613;"	d
GL_VERSION_2_0	glcorearb.h	688;"	d
GL_VERSION_2_1	glcorearb.h	964;"	d
GL_VERSION_3_0	glcorearb.h	998;"	d
GL_VERSION_3_1	glcorearb.h	1404;"	d
GL_VERSION_3_2	glcorearb.h	1495;"	d
GL_VERSION_3_3	glcorearb.h	1643;"	d
GL_VERSION_4_0	glcorearb.h	1721;"	d
GL_VERSION_4_1	glcorearb.h	1896;"	d
GL_VERSION_4_2	glcorearb.h	2113;"	d
GL_VERSION_4_3	glcorearb.h	2255;"	d
GL_VERSION_4_4	glcorearb.h	2606;"	d
GL_VERSION_4_5	glcorearb.h	2649;"	d
GL_VERTEX_ARRAY	glcorearb.h	397;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	glcorearb.h	5501;"	d
GL_VERTEX_ARRAY_BINDING	glcorearb.h	1230;"	d
GL_VERTEX_ARRAY_LENGTH_NV	glcorearb.h	5511;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	glcorearb.h	3953;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	glcorearb.h	5500;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	glcorearb.h	2157;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	glcorearb.h	627;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	glcorearb.h	1644;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	glcorearb.h	3327;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	glcorearb.h	694;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	glcorearb.h	1021;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	glcorearb.h	5510;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	glcorearb.h	2258;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	glcorearb.h	724;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	glcorearb.h	700;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	glcorearb.h	695;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	glcorearb.h	696;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	glcorearb.h	697;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	glcorearb.h	5498;"	d
GL_VERTEX_ATTRIB_BINDING	glcorearb.h	2507;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	glcorearb.h	2508;"	d
GL_VERTEX_BINDING_BUFFER	glcorearb.h	2514;"	d
GL_VERTEX_BINDING_DIVISOR	glcorearb.h	2509;"	d
GL_VERTEX_BINDING_OFFSET	glcorearb.h	2510;"	d
GL_VERTEX_BINDING_STRIDE	glcorearb.h	2511;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	glcorearb.h	699;"	d
GL_VERTEX_SHADER	glcorearb.h	727;"	d
GL_VERTEX_SHADER_BIT	glcorearb.h	1917;"	d
GL_VERTEX_SHADER_INVOCATIONS_ARB	glcorearb.h	3381;"	d
GL_VERTEX_SUBROUTINE	glcorearb.h	2441;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	glcorearb.h	2447;"	d
GL_VERTEX_TEXTURE	glcorearb.h	2380;"	d
GL_VERTICAL_LINE_TO_NV	glcorearb.h	5134;"	d
GL_VERTICES_SUBMITTED_ARB	glcorearb.h	3379;"	d
GL_VIEWPORT	glcorearb.h	165;"	d
GL_VIEWPORT_BOUNDS_RANGE	glcorearb.h	1928;"	d
GL_VIEWPORT_COMMAND_NV	glcorearb.h	4784;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	glcorearb.h	1930;"	d
GL_VIEWPORT_POSITION_W_SCALE_NV	glcorearb.h	4757;"	d
GL_VIEWPORT_POSITION_W_SCALE_X_COEFF_NV	glcorearb.h	4758;"	d
GL_VIEWPORT_POSITION_W_SCALE_Y_COEFF_NV	glcorearb.h	4759;"	d
GL_VIEWPORT_SUBPIXEL_BITS	glcorearb.h	1927;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_W_NV	glcorearb.h	5564;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_X_NV	glcorearb.h	5558;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Y_NV	glcorearb.h	5560;"	d
GL_VIEWPORT_SWIZZLE_NEGATIVE_Z_NV	glcorearb.h	5562;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_W_NV	glcorearb.h	5563;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_X_NV	glcorearb.h	5557;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Y_NV	glcorearb.h	5559;"	d
GL_VIEWPORT_SWIZZLE_POSITIVE_Z_NV	glcorearb.h	5561;"	d
GL_VIEWPORT_SWIZZLE_W_NV	glcorearb.h	5568;"	d
GL_VIEWPORT_SWIZZLE_X_NV	glcorearb.h	5565;"	d
GL_VIEWPORT_SWIZZLE_Y_NV	glcorearb.h	5566;"	d
GL_VIEWPORT_SWIZZLE_Z_NV	glcorearb.h	5567;"	d
GL_VIEW_CLASS_128_BITS	glcorearb.h	2419;"	d
GL_VIEW_CLASS_16_BITS	glcorearb.h	2425;"	d
GL_VIEW_CLASS_24_BITS	glcorearb.h	2424;"	d
GL_VIEW_CLASS_32_BITS	glcorearb.h	2423;"	d
GL_VIEW_CLASS_48_BITS	glcorearb.h	2422;"	d
GL_VIEW_CLASS_64_BITS	glcorearb.h	2421;"	d
GL_VIEW_CLASS_8_BITS	glcorearb.h	2426;"	d
GL_VIEW_CLASS_96_BITS	glcorearb.h	2420;"	d
GL_VIEW_CLASS_BPTC_FLOAT	glcorearb.h	2434;"	d
GL_VIEW_CLASS_BPTC_UNORM	glcorearb.h	2433;"	d
GL_VIEW_CLASS_RGTC1_RED	glcorearb.h	2431;"	d
GL_VIEW_CLASS_RGTC2_RG	glcorearb.h	2432;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	glcorearb.h	2427;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	glcorearb.h	2428;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	glcorearb.h	2429;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	glcorearb.h	2430;"	d
GL_VIEW_COMPATIBILITY_CLASS	glcorearb.h	2405;"	d
GL_VIRTUAL_PAGE_SIZE_INDEX_ARB	glcorearb.h	3604;"	d
GL_VIRTUAL_PAGE_SIZE_X_ARB	glcorearb.h	3607;"	d
GL_VIRTUAL_PAGE_SIZE_Y_ARB	glcorearb.h	3608;"	d
GL_VIRTUAL_PAGE_SIZE_Z_ARB	glcorearb.h	3609;"	d
GL_VIVIDLIGHT_NV	glcorearb.h	4740;"	d
GL_WAIT_FAILED	glcorearb.h	1576;"	d
GL_WARPS_PER_SM_NV	glcorearb.h	5425;"	d
GL_WARP_SIZE_NV	glcorearb.h	5424;"	d
GL_WEIGHTED_AVERAGE_ARB	glcorearb.h	3696;"	d
GL_WINDOW_RECTANGLE_EXT	glcorearb.h	4570;"	d
GL_WINDOW_RECTANGLE_MODE_EXT	glcorearb.h	4571;"	d
GL_WRITE_ONLY	glcorearb.h	629;"	d
GL_XOR	glcorearb.h	219;"	d
GL_XOR_NV	glcorearb.h	4741;"	d
GL_ZERO	glcorearb.h	111;"	d
GL_ZERO_TO_ONE	glcorearb.h	2652;"	d
GLbitfield	glcorearb.h	/^typedef unsigned int GLbitfield;$/;"	t
GLboolean	glcorearb.h	/^typedef unsigned char GLboolean;$/;"	t
GLbyte	glcorearb.h	/^typedef signed char GLbyte;$/;"	t
GLchar	glcorearb.h	/^typedef char GLchar;$/;"	t
GLclampd	glcorearb.h	/^typedef double GLclampd;$/;"	t
GLclampf	glcorearb.h	/^typedef float GLclampf;$/;"	t
GLdouble	glcorearb.h	/^typedef double GLdouble;$/;"	t
GLenum	glcorearb.h	/^typedef unsigned int GLenum;$/;"	t
GLfloat	glcorearb.h	/^typedef float GLfloat;$/;"	t
GLhalf	glcorearb.h	/^typedef unsigned short GLhalf;$/;"	t
GLint	glcorearb.h	/^typedef int GLint;$/;"	t
GLint64	glcorearb.h	/^typedef int64_t GLint64;$/;"	t
GLint64EXT	glcorearb.h	/^typedef int64_t GLint64EXT;$/;"	t
GLintptr	glcorearb.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLshort	glcorearb.h	/^typedef short GLshort;$/;"	t
GLsizei	glcorearb.h	/^typedef int GLsizei;$/;"	t
GLsizeiptr	glcorearb.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsync	glcorearb.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLubyte	glcorearb.h	/^typedef unsigned char GLubyte;$/;"	t
GLuint	glcorearb.h	/^typedef unsigned int GLuint;$/;"	t
GLuint64	glcorearb.h	/^typedef uint64_t GLuint64;$/;"	t
GLuint64EXT	glcorearb.h	/^typedef uint64_t GLuint64EXT;$/;"	t
GLushort	glcorearb.h	/^typedef unsigned short GLushort;$/;"	t
GLvoid	glcorearb.h	/^typedef void GLvoid;$/;"	t
LOG_ERROR	load_save_png.cpp	10;"	d	file:
LowerLeftOrigin	load_save_png.hpp	/^	LowerLeftOrigin,$/;"	e	enum:OriginLocation
OriginLocation	load_save_png.hpp	/^enum OriginLocation {$/;"	g
PFNGLACTIVEPROGRAMEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t
PFNGLACTIVESHADERPROGRAMPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t
PFNGLACTIVETEXTUREPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLAPPLYFRAMEBUFFERATTACHMENTCMAAINTELPROC) (void);$/;"	t
PFNGLATTACHSHADERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLBEGINCONDITIONALRENDERNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINCONDITIONALRENDERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINPERFMONITORAMDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLBEGINPERFQUERYINTELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLBEGINQUERYINDEXEDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDBUFFERBASEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERRANGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERSBASEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSBASEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers);$/;"	t
PFNGLBINDBUFFERSRANGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERSRANGEPROC) (GLenum target, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizeiptr *sizes);$/;"	t
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAMEBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDIMAGETEXTUREPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);$/;"	t
PFNGLBINDIMAGETEXTURESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);$/;"	t
PFNGLBINDMULTITEXTUREEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);$/;"	t
PFNGLBINDPROGRAMPIPELINEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLBINDRENDERBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDSAMPLERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t
PFNGLBINDSAMPLERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERSPROC) (GLuint first, GLsizei count, const GLuint *samplers);$/;"	t
PFNGLBINDTEXTUREPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTURESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTURESPROC) (GLuint first, GLsizei count, const GLuint *textures);$/;"	t
PFNGLBINDTEXTUREUNITPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREUNITPROC) (GLuint unit, GLuint texture);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDVERTEXARRAYPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLBINDVERTEXBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERSPROC) (GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	t
PFNGLBLENDBARRIERKHRPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERKHRPROC) (void);$/;"	t
PFNGLBLENDBARRIERNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDBARRIERNVPROC) (void);$/;"	t
PFNGLBLENDCOLORPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLBLENDEQUATIONIARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCIARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);$/;"	t
PFNGLBLENDFUNCSEPARATEIARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDPARAMETERINVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDPARAMETERINVPROC) (GLenum pname, GLint value);$/;"	t
PFNGLBLITFRAMEBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITNAMEDFRAMEBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITNAMEDFRAMEBUFFERPROC) (GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBUFFERADDRESSRANGENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);$/;"	t
PFNGLBUFFERDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLBUFFERPAGECOMMITMENTARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERPAGECOMMITMENTARBPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLBUFFERSTORAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSTORAGEPROC) (GLenum target, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLBUFFERSUBDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLCALLCOMMANDLISTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCALLCOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSPROC	glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);$/;"	t
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC	glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC) (GLuint framebuffer, GLenum target);$/;"	t
PFNGLCLAMPCOLORPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLEARBUFFERDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERFIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARBUFFERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARBUFFERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARBUFFERSUBDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARCOLORPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLCLEARDEPTHFPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t
PFNGLCLEARDEPTHPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);$/;"	t
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERSUBDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERFIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFIPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERFVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC) (GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);$/;"	t
PFNGLCLEARSTENCILPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);$/;"	t
PFNGLCLEARTEXIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARTEXIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARTEXSUBIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARTEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLIENTATTRIBDEFAULTEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLCLIENTWAITSYNCPROC	glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCLIPCONTROLPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCLIPCONTROLPROC) (GLenum origin, GLenum depth);$/;"	t
PFNGLCOLORFORMATNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLCOLORMASKIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORMASKPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLCOMMANDLISTSEGMENTSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMMANDLISTSEGMENTSNVPROC) (GLuint list, GLuint segments);$/;"	t
PFNGLCOMPILECOMMANDLISTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILECOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLCOMPILESHADERINCLUDEARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar *const*path, const GLint *length);$/;"	t
PFNGLCOMPILESHADERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data);$/;"	t
PFNGLCONSERVATIVERASTERPARAMETERFNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERFNVPROC) (GLenum pname, GLfloat value);$/;"	t
PFNGLCONSERVATIVERASTERPARAMETERINVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCONSERVATIVERASTERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOPYBUFFERSUBDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYIMAGESUBDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	t
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYNAMEDBUFFERSUBDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYNAMEDBUFFERSUBDATAPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYPATHNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYPATHNVPROC) (GLuint resultPath, GLuint srcPath);$/;"	t
PFNGLCOPYTEXIMAGE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOVERAGEMODULATIONNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONNVPROC) (GLenum components);$/;"	t
PFNGLCOVERAGEMODULATIONTABLENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERAGEMODULATIONTABLENVPROC) (GLsizei n, const GLfloat *v);$/;"	t
PFNGLCOVERFILLPATHINSTANCEDNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLCOVERFILLPATHNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERFILLPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t
PFNGLCOVERSTROKEPATHINSTANCEDNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLCOVERSTROKEPATHNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCOVERSTROKEPATHNVPROC) (GLuint path, GLenum coverMode);$/;"	t
PFNGLCREATEBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLCREATECOMMANDLISTSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATECOMMANDLISTSNVPROC) (GLsizei n, GLuint *lists);$/;"	t
PFNGLCREATEFRAMEBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLCREATEPERFQUERYINTELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEPERFQUERYINTELPROC) (GLuint queryId, GLuint *queryHandle);$/;"	t
PFNGLCREATEPROGRAMPIPELINESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLCREATEPROGRAMPROC	glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATEQUERIESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEQUERIESPROC) (GLenum target, GLsizei n, GLuint *ids);$/;"	t
PFNGLCREATERENDERBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATERENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLCREATESAMPLERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATESAMPLERSPROC) (GLsizei n, GLuint *samplers);$/;"	t
PFNGLCREATESHADERPROC	glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCREATESHADERPROGRAMEXTPROC	glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t
PFNGLCREATESHADERPROGRAMVPROC	glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar *const*strings);$/;"	t
PFNGLCREATESTATESNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATESTATESNVPROC) (GLsizei n, GLuint *states);$/;"	t
PFNGLCREATESYNCFROMCLEVENTARBPROC	glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context *context, struct _cl_event *event, GLbitfield flags);$/;"	t
PFNGLCREATETEXTURESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATETEXTURESPROC) (GLenum target, GLsizei n, GLuint *textures);$/;"	t
PFNGLCREATETRANSFORMFEEDBACKSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATETRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLCREATEVERTEXARRAYSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCREATEVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLCULLFACEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);$/;"	t
PFNGLDEBUGMESSAGECALLBACKARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECONTROLARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGECONTROLPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGEINSERTARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDELETEBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETECOMMANDLISTSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETECOMMANDLISTSNVPROC) (GLsizei n, const GLuint *lists);$/;"	t
PFNGLDELETEFRAMEBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETENAMEDSTRINGARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLDELETEPATHSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPATHSNVPROC) (GLuint path, GLsizei range);$/;"	t
PFNGLDELETEPERFMONITORSAMDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLDELETEPERFQUERYINTELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLDELETEPROGRAMPIPELINESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t
PFNGLDELETEPROGRAMPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEQUERIESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETERENDERBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETESAMPLERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t
PFNGLDELETESHADERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETESTATESNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESTATESNVPROC) (GLsizei n, const GLuint *states);$/;"	t
PFNGLDELETESYNCPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t
PFNGLDELETETEXTURESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEVERTEXARRAYSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDEPTHFUNCPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);$/;"	t
PFNGLDEPTHMASKPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);$/;"	t
PFNGLDEPTHRANGEARRAYVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);$/;"	t
PFNGLDEPTHRANGEFPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t
PFNGLDEPTHRANGEINDEXEDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t
PFNGLDEPTHRANGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble near, GLdouble far);$/;"	t
PFNGLDETACHSHADERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDISABLECLIENTSTATEIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLDISABLEINDEXEDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);$/;"	t
PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLDISABLEVERTEXARRAYATTRIBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLDISABLEVERTEXARRAYEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEGROUPSIZEARBPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);$/;"	t
PFNGLDISPATCHCOMPUTEINDIRECTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t
PFNGLDISPATCHCOMPUTEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);$/;"	t
PFNGLDRAWARRAYSINDIRECTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect);$/;"	t
PFNGLDRAWARRAYSINSTANCEDARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWARRAYSINSTANCEDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	t
PFNGLDRAWARRAYSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum buf);$/;"	t
PFNGLDRAWBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWCOMMANDSADDRESSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSADDRESSNVPROC) (GLenum primitiveMode, const GLuint64 *indirects, const GLsizei *sizes, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSNVPROC) (GLenum primitiveMode, GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESADDRESSNVPROC) (const GLuint64 *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLDRAWCOMMANDSSTATESNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWCOMMANDSSTATESNVPROC) (GLuint buffer, const GLintptr *indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLDRAWELEMENTSBASEVERTEXPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINDIRECTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount);$/;"	t
PFNGLDRAWELEMENTSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);$/;"	t
PFNGLDRAWVKIMAGENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWVKIMAGENVPROC) (GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);$/;"	t
PFNGLEDGEFLAGFORMATNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t
PFNGLENABLECLIENTSTATEIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEIEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLENABLEINDEXEDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);$/;"	t
PFNGLENABLEVERTEXARRAYATTRIBEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBEXTPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLENABLEVERTEXARRAYATTRIBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYATTRIBPROC) (GLuint vaobj, GLuint index);$/;"	t
PFNGLENABLEVERTEXARRAYEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXARRAYEXTPROC) (GLuint vaobj, GLenum array);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENDCONDITIONALRENDERNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t
PFNGLENDCONDITIONALRENDERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t
PFNGLENDPERFMONITORAMDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLENDPERFQUERYINTELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENDPERFQUERYINTELPROC) (GLuint queryHandle);$/;"	t
PFNGLENDQUERYINDEXEDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENDQUERYPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDTRANSFORMFEEDBACKPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLEVALUATEDEPTHVALUESARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLEVALUATEDEPTHVALUESARBPROC) (void);$/;"	t
PFNGLFENCESYNCPROC	glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFINISHPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFINISHPROC) (void);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHPROC) (void);$/;"	t
PFNGLFOGCOORDFORMATNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLFRAGMENTCOVERAGECOLORNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOVERAGECOLORNVPROC) (GLuint color);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	t
PFNGLFRAMEBUFFERPARAMETERIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLenum target, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTUREARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREMULTIVIEWOVRPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews);$/;"	t
PFNGLFRAMEBUFFERTEXTUREPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRONTFACEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);$/;"	t
PFNGLGENBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENERATEMIPMAPPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t
PFNGLGENERATETEXTUREMIPMAPEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t
PFNGLGENERATETEXTUREMIPMAPPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPPROC) (GLuint texture);$/;"	t
PFNGLGENFRAMEBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENPATHSNVPROC	glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGENPATHSNVPROC) (GLsizei range);$/;"	t
PFNGLGENPERFMONITORSAMDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLGENPROGRAMPIPELINESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLGENQUERIESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENRENDERBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENSAMPLERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t
PFNGLGENTEXTURESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENVERTEXARRAYSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEATTRIBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINENAMEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	t
PFNGLGETACTIVEUNIFORMNAMEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMSIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETBOOLEANINDEXEDVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANI_VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *data);$/;"	t
PFNGLGETBUFFERPARAMETERI64VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERUI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, void **params);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETCOMMANDHEADERNVPROC	glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETCOMMANDHEADERNVPROC) (GLenum tokenID, GLuint size);$/;"	t
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint lod, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint lod, void *img);$/;"	t
PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETCOVERAGEMODULATIONTABLENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOVERAGEMODULATIONTABLENVPROC) (GLsizei bufsize, GLfloat *v);$/;"	t
PFNGLGETDEBUGMESSAGELOGARBPROC	glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDEBUGMESSAGELOGPROC	glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDOUBLEINDEXEDVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDOUBLEI_VEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VEXTPROC) (GLenum pname, GLuint index, GLdouble *params);$/;"	t
PFNGLGETDOUBLEI_VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDOUBLEVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *data);$/;"	t
PFNGLGETERRORPROC	glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);$/;"	t
PFNGLGETFIRSTPERFQUERYIDINTELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFIRSTPERFQUERYIDINTELPROC) (GLuint *queryId);$/;"	t
PFNGLGETFLOATINDEXEDVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFLOATI_VEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VEXTPROC) (GLenum pname, GLuint index, GLfloat *params);$/;"	t
PFNGLGETFLOATI_VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFLOATVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *data);$/;"	t
PFNGLGETFRAGDATAINDEXPROC	glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONPROC	glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSARBPROC	glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSPROC	glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSPROC) (void);$/;"	t
PFNGLGETIMAGEHANDLEARBPROC	glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLEARBPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	t
PFNGLGETIMAGEHANDLENVPROC	glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETIMAGEHANDLENVPROC) (GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);$/;"	t
PFNGLGETINTEGER64I_VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t
PFNGLGETINTEGER64VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *data);$/;"	t
PFNGLGETINTEGERINDEXEDVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERI_VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERUI64I_VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);$/;"	t
PFNGLGETINTEGERUI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t
PFNGLGETINTEGERVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *data);$/;"	t
PFNGLGETINTERNALFORMATI64VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);$/;"	t
PFNGLGETINTERNALFORMATIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETINTERNALFORMATSAMPLEIVNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATSAMPLEIVNVPROC) (GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETMULTISAMPLEFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTITEXENVFVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXENVIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXGENDVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETMULTITEXGENFVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXGENIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXIMAGEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERFVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERI64VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERI64VPROC) (GLuint buffer, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, void **params);$/;"	t
PFNGLGETNAMEDBUFFERPOINTERVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVPROC) (GLuint buffer, GLenum pname, void **params);$/;"	t
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETNAMEDBUFFERSUBDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, void *data);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC) (GLuint framebuffer, GLenum pname, GLint *param);$/;"	t
PFNGLGETNAMEDPROGRAMIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, void *string);$/;"	t
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC) (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDSTRINGARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	t
PFNGLGETNAMEDSTRINGIVARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, void *img);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint lod, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETNEXTPERFQUERYIDINTELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNEXTPERFQUERYIDINTELPROC) (GLuint queryId, GLuint *nextQueryId);$/;"	t
PFNGLGETNTEXIMAGEARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *img);$/;"	t
PFNGLGETNTEXIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETNUNIFORMDVARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMDVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMFVARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint64 *params);$/;"	t
PFNGLGETNUNIFORMIVARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMUI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint64 *params);$/;"	t
PFNGLGETNUNIFORMUIVARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETNUNIFORMUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETOBJECTLABELEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTLABELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTPTRLABELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETPATHCOMMANDSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHCOMMANDSNVPROC) (GLuint path, GLubyte *commands);$/;"	t
PFNGLGETPATHCOORDSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHCOORDSNVPROC) (GLuint path, GLfloat *coords);$/;"	t
PFNGLGETPATHDASHARRAYNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHDASHARRAYNVPROC) (GLuint path, GLfloat *dashArray);$/;"	t
PFNGLGETPATHLENGTHNVPROC	glcorearb.h	/^typedef GLfloat (APIENTRYP PFNGLGETPATHLENGTHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments);$/;"	t
PFNGLGETPATHMETRICRANGENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICRANGENVPROC) (GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics);$/;"	t
PFNGLGETPATHMETRICSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHMETRICSNVPROC) (GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics);$/;"	t
PFNGLGETPATHPARAMETERFVNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, GLfloat *value);$/;"	t
PFNGLGETPATHPARAMETERIVNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, GLint *value);$/;"	t
PFNGLGETPATHSPACINGNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPATHSPACINGNVPROC) (GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing);$/;"	t
PFNGLGETPERFCOUNTERINFOINTELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFCOUNTERINFOINTELPROC) (GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue);$/;"	t
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	t
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, void *data);$/;"	t
PFNGLGETPERFMONITORCOUNTERSAMDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	t
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	t
PFNGLGETPERFMONITORGROUPSAMDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	t
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	t
PFNGLGETPERFQUERYDATAINTELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYDATAINTELPROC) (GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid *data, GLuint *bytesWritten);$/;"	t
PFNGLGETPERFQUERYIDBYNAMEINTELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYIDBYNAMEINTELPROC) (GLchar *queryName, GLuint *queryId);$/;"	t
PFNGLGETPERFQUERYINFOINTELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPERFQUERYINFOINTELPROC) (GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask);$/;"	t
PFNGLGETPOINTERINDEXEDVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, void **data);$/;"	t
PFNGLGETPOINTERI_VEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERI_VEXTPROC) (GLenum pname, GLuint index, void **params);$/;"	t
PFNGLGETPOINTERVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, void **params);$/;"	t
PFNGLGETPROGRAMBINARYPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMINTERFACEIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMPIPELINEIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCEFVNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEFVNVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLfloat *params);$/;"	t
PFNGLGETPROGRAMRESOURCEINDEXPROC	glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCEIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONPROC	glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCENAMEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETPROGRAMSTAGEIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	t
PFNGLGETQUERYBUFFEROBJECTI64VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTUI64VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUI64VPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYBUFFEROBJECTUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYBUFFEROBJECTUIVPROC) (GLuint id, GLuint buffer, GLenum pname, GLintptr offset);$/;"	t
PFNGLGETQUERYINDEXEDIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTI64VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERINFOLOGPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERPRECISIONFORMATPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	t
PFNGLGETSHADERSOURCEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSTAGEINDEXNVPROC	glcorearb.h	/^typedef GLushort (APIENTRYP PFNGLGETSTAGEINDEXNVPROC) (GLenum shadertype);$/;"	t
PFNGLGETSTRINGIPROC	glcorearb.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t
PFNGLGETSTRINGPROC	glcorearb.h	/^typedef const GLubyte *(APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);$/;"	t
PFNGLGETSUBROUTINEINDEXPROC	glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSYNCIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETTEXIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETTEXLEVELPARAMETERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXLEVELPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXPARAMETERIIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREHANDLEARBPROC	glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLEARBPROC) (GLuint texture);$/;"	t
PFNGLGETTEXTUREHANDLENVPROC	glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTUREHANDLENVPROC) (GLuint texture);$/;"	t
PFNGLGETTEXTUREIMAGEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLGETTEXTUREIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEPROC) (GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVPROC) (GLuint texture, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVPROC) (GLuint texture, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERFVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTUREPARAMETERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTURESAMPLERHANDLEARBPROC	glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLEARBPROC) (GLuint texture, GLuint sampler);$/;"	t
PFNGLGETTEXTURESAMPLERHANDLENVPROC	glcorearb.h	/^typedef GLuint64 (APIENTRYP PFNGLGETTEXTURESAMPLERHANDLENVPROC) (GLuint texture, GLuint sampler);$/;"	t
PFNGLGETTEXTURESUBIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXTURESUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void *pixels);$/;"	t
PFNGLGETTRANSFORMFEEDBACKI64_VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI64_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint64 *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKIVPROC) (GLuint xfb, GLenum pname, GLint *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKI_VPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKI_VPROC) (GLuint xfb, GLenum pname, GLuint index, GLint *param);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETUNIFORMBLOCKINDEXPROC	glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);$/;"	t
PFNGLGETUNIFORMDVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);$/;"	t
PFNGLGETUNIFORMFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VARBPROC) (GLuint program, GLint location, GLint64 *params);$/;"	t
PFNGLGETUNIFORMI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT *params);$/;"	t
PFNGLGETUNIFORMINDICESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar *const*uniformNames, GLuint *uniformIndices);$/;"	t
PFNGLGETUNIFORMIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETUNIFORMSUBROUTINEUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VARBPROC) (GLuint program, GLint location, GLuint64 *params);$/;"	t
PFNGLGETUNIFORMUI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);$/;"	t
PFNGLGETUNIFORMUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETVERTEXARRAYINDEXED64IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXED64IVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint64 *param);$/;"	t
PFNGLGETVERTEXARRAYINDEXEDIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINDEXEDIVPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYINTEGERVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYINTEGERVEXTPROC) (GLuint vaobj, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYIVPROC) (GLuint vaobj, GLenum pname, GLint *param);$/;"	t
PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERI_VEXTPROC) (GLuint vaobj, GLuint index, GLenum pname, void **param);$/;"	t
PFNGLGETVERTEXARRAYPOINTERVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXARRAYPOINTERVEXTPROC) (GLuint vaobj, GLenum pname, void **param);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBLDVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBLI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBLUI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VARBPROC) (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBLUI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, void **pointer);$/;"	t
PFNGLGETVKPROCADDRNVPROC	glcorearb.h	/^typedef GLVULKANPROCNV (APIENTRYP PFNGLGETVKPROCADDRNVPROC) (const GLchar *name);$/;"	t
PFNGLHINTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLINDEXFORMATNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLINSERTEVENTMARKEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLINTERPOLATEPATHSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLINTERPOLATEPATHSNVPROC) (GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);$/;"	t
PFNGLINVALIDATEBUFFERDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t
PFNGLINVALIDATEBUFFERSUBDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLINVALIDATEFRAMEBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC) (GLuint framebuffer, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLINVALIDATESUBFRAMEBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLINVALIDATETEXIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t
PFNGLINVALIDATETEXSUBIMAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLISBUFFERPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERRESIDENTNVPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLISCOMMANDLISTNVPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISCOMMANDLISTNVPROC) (GLuint list);$/;"	t
PFNGLISENABLEDINDEXEDEXTPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDIPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);$/;"	t
PFNGLISFRAMEBUFFERPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t
PFNGLISIMAGEHANDLERESIDENTARBPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLISIMAGEHANDLERESIDENTNVPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLISNAMEDBUFFERRESIDENTNVPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLISNAMEDSTRINGARBPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLISPATHNVPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPATHNVPROC) (GLuint path);$/;"	t
PFNGLISPOINTINFILLPATHNVPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINFILLPATHNVPROC) (GLuint path, GLuint mask, GLfloat x, GLfloat y);$/;"	t
PFNGLISPOINTINSTROKEPATHNVPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPOINTINSTROKEPATHNVPROC) (GLuint path, GLfloat x, GLfloat y);$/;"	t
PFNGLISPROGRAMPIPELINEPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLISPROGRAMPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISQUERYPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFERPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSAMPLERPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t
PFNGLISSHADERPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISSTATENVPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSTATENVPROC) (GLuint state);$/;"	t
PFNGLISSYNCPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t
PFNGLISTEXTUREHANDLERESIDENTARBPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLISTEXTUREHANDLERESIDENTNVPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLISTEXTUREPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);$/;"	t
PFNGLISTRANSFORMFEEDBACKPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t
PFNGLISVERTEXARRAYPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLLABELOBJECTEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, const GLchar *label);$/;"	t
PFNGLLINEWIDTHPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);$/;"	t
PFNGLLINKPROGRAMPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLLISTDRAWCOMMANDSSTATESCLIENTNVPROC) (GLuint list, GLuint segment, const void **indirects, const GLsizei *sizes, const GLuint *states, const GLuint *fbos, GLuint count);$/;"	t
PFNGLLOGICOPPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);$/;"	t
PFNGLMAKEBUFFERNONRESIDENTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLMAKEBUFFERRESIDENTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAKEIMAGEHANDLERESIDENTARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTARBPROC) (GLuint64 handle, GLenum access);$/;"	t
PFNGLMAKEIMAGEHANDLERESIDENTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKEIMAGEHANDLERESIDENTNVPROC) (GLuint64 handle, GLenum access);$/;"	t
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLENONRESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLERESIDENTARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTARBPROC) (GLuint64 handle);$/;"	t
PFNGLMAKETEXTUREHANDLERESIDENTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAKETEXTUREHANDLERESIDENTNVPROC) (GLuint64 handle);$/;"	t
PFNGLMAPBUFFERPROC	glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERRANGEPROC	glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPNAMEDBUFFEREXTPROC	glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPNAMEDBUFFERPROC	glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPNAMEDBUFFERRANGEPROC	glcorearb.h	/^typedef void *(APIENTRYP PFNGLMAPNAMEDBUFFERRANGEPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMATRIXFRUSTUMEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXLOAD3X2FNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOAD3X3FNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOAD3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADFEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADIDENTITYEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULT3X2FNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X2FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULT3X3FNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULT3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTFEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSE3X3FNVPROC) (GLenum matrixMode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXORTHOEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXPOPEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXPUSHEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXROTATEDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXROTATEFEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXSCALEDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXSCALEFEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXTRANSLATEDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXTRANSLATEFEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMAXSHADERCOMPILERTHREADSARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMAXSHADERCOMPILERTHREADSARBPROC) (GLuint count);$/;"	t
PFNGLMEMORYBARRIERBYREGIONPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERBYREGIONPROC) (GLbitfield barriers);$/;"	t
PFNGLMEMORYBARRIERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t
PFNGLMINSAMPLESHADINGARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t
PFNGLMINSAMPLESHADINGPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTBINDLESSNVPROC) (GLenum mode, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTCOUNTARBPROC) (GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSCOUNTNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei maxDrawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTBINDLESSNVPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTCOUNTARBPROC) (GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount);$/;"	t
PFNGLMULTITEXBUFFEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLMULTITEXCOORDPOINTEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLMULTITEXENVFEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXENVFVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXENVIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXENVIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXGENDEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);$/;"	t
PFNGLMULTITEXGENDVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);$/;"	t
PFNGLMULTITEXGENFEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXGENFVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXGENIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXGENIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXIMAGE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXPARAMETERFEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXPARAMETERFVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXPARAMETERIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXPARAMETERIIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXPARAMETERIUIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLMULTITEXPARAMETERIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXRENDERBUFFEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLMULTITEXSUBIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLNAMEDBUFFERDATAEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLNAMEDBUFFERDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLenum usage);$/;"	t
PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTARBPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERPAGECOMMITMENTEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLboolean commit);$/;"	t
PFNGLNAMEDBUFFERSTORAGEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEEXTPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLNAMEDBUFFERSTORAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSTORAGEPROC) (GLuint buffer, GLsizeiptr size, const void *data, GLbitfield flags);$/;"	t
PFNGLNAMEDBUFFERSUBDATAEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLNAMEDBUFFERSUBDATAPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC) (GLuint framebuffer, GLenum buf);$/;"	t
PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	t
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pname, GLint param);$/;"	t
PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC) (GLuint framebuffer, GLenum pname, GLint param);$/;"	t
PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC) (GLuint framebuffer, GLenum src);$/;"	t
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVARBPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERSAMPLELOCATIONSFVNVPROC) (GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMSTRINGEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const void *string);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDSTRINGARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	t
PFNGLNORMALFORMATNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLOBJECTLABELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPTRLABELPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);$/;"	t
PFNGLPATCHPARAMETERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t
PFNGLPATCHPARAMETERIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t
PFNGLPATHCOMMANDSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOMMANDSNVPROC) (GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHCOORDSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOORDSNVPROC) (GLuint path, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHCOVERDEPTHFUNCNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHCOVERDEPTHFUNCNVPROC) (GLenum func);$/;"	t
PFNGLPATHDASHARRAYNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHDASHARRAYNVPROC) (GLuint path, GLsizei dashCount, const GLfloat *dashArray);$/;"	t
PFNGLPATHGLYPHINDEXARRAYNVPROC	glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHGLYPHINDEXRANGENVPROC	glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHGLYPHINDEXRANGENVPROC) (GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint baseAndCount[2]);$/;"	t
PFNGLPATHGLYPHRANGENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHRANGENVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHGLYPHSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHGLYPHSNVPROC) (GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC	glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLPATHMEMORYGLYPHINDEXARRAYNVPROC) (GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale);$/;"	t
PFNGLPATHPARAMETERFNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFNVPROC) (GLuint path, GLenum pname, GLfloat value);$/;"	t
PFNGLPATHPARAMETERFVNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERFVNVPROC) (GLuint path, GLenum pname, const GLfloat *value);$/;"	t
PFNGLPATHPARAMETERINVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERINVPROC) (GLuint path, GLenum pname, GLint value);$/;"	t
PFNGLPATHPARAMETERIVNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHPARAMETERIVNVPROC) (GLuint path, GLenum pname, const GLint *value);$/;"	t
PFNGLPATHSTENCILDEPTHOFFSETNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILDEPTHOFFSETNVPROC) (GLfloat factor, GLfloat units);$/;"	t
PFNGLPATHSTENCILFUNCNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTENCILFUNCNVPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLPATHSTRINGNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSTRINGNVPROC) (GLuint path, GLenum format, GLsizei length, const void *pathString);$/;"	t
PFNGLPATHSUBCOMMANDSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOMMANDSNVPROC) (GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPATHSUBCOORDSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPATHSUBCOORDSNVPROC) (GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLPIXELSTOREFPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELSTOREIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTALONGPATHNVPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLPOINTALONGPATHNVPROC) (GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY);$/;"	t
PFNGLPOINTPARAMETERFPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTSIZEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);$/;"	t
PFNGLPOLYGONMODEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLPOLYGONOFFSETCLAMPEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETCLAMPEXTPROC) (GLfloat factor, GLfloat units, GLfloat clamp);$/;"	t
PFNGLPOLYGONOFFSETPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);$/;"	t
PFNGLPOPDEBUGGROUPPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t
PFNGLPOPGROUPMARKEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t
PFNGLPRIMITIVEBOUNDINGBOXARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVEBOUNDINGBOXARBPROC) (GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW);$/;"	t
PFNGLPRIMITIVERESTARTINDEXPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t
PFNGLPROGRAMBINARYPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const void *binary, GLsizei length);$/;"	t
PFNGLPROGRAMPARAMETERIARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPATHFRAGMENTINPUTGENNVPROC) (GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs);$/;"	t
PFNGLPROGRAMUNIFORM1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble x);$/;"	t
PFNGLPROGRAMUNIFORM1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);$/;"	t
PFNGLPROGRAMUNIFORM1DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1FEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1I64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64ARBPROC) (GLuint program, GLint location, GLint64 x);$/;"	t
PFNGLPROGRAMUNIFORM1I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1I64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM1I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1IEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UI64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64ARBPROC) (GLuint program, GLint location, GLuint64 x);$/;"	t
PFNGLPROGRAMUNIFORM1UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1UI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM1UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLPROGRAMUNIFORM2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	t
PFNGLPROGRAMUNIFORM2DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2FEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2I64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y);$/;"	t
PFNGLPROGRAMUNIFORM2I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2I64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM2I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2IEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UI64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y);$/;"	t
PFNGLPROGRAMUNIFORM2UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2UI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM2UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLPROGRAMUNIFORM3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	t
PFNGLPROGRAMUNIFORM3DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3FEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3I64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	t
PFNGLPROGRAMUNIFORM3I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3I64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM3I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3IEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UI64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	t
PFNGLPROGRAMUNIFORM3UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3UI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM3UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMUNIFORM4DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	t
PFNGLPROGRAMUNIFORM4DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4FEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4I64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64ARBPROC) (GLuint program, GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	t
PFNGLPROGRAMUNIFORM4I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4I64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM4I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4IEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UI64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64ARBPROC) (GLuint program, GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	t
PFNGLPROGRAMUNIFORM4UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4UI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLPROGRAMUNIFORM4UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64ARBPROC) (GLuint program, GLint location, GLuint64 value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64NVPROC) (GLuint program, GLint location, GLuint64 value);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VARBPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	t
PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMHANDLEUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64 *values);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMUI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);$/;"	t
PFNGLPROGRAMUNIFORMUI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROVOKINGVERTEXPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLPUSHDEBUGGROUPPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
PFNGLPUSHGROUPMARKEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLQUERYCOUNTERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t
PFNGLRASTERSAMPLESEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLRASTERSAMPLESEXTPROC) (GLuint samples, GLboolean fixedsamplelocations);$/;"	t
PFNGLREADBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum src);$/;"	t
PFNGLREADNPIXELSARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLREADNPIXELSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLREADPIXELSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void *pixels);$/;"	t
PFNGLRELEASESHADERCOMPILERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRESOLVEDEPTHVALUESNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLRESOLVEDEPTHVALUESNVPROC) (void);$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLSAMPLECOVERAGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint maskNumber, GLbitfield mask);$/;"	t
PFNGLSAMPLERPARAMETERFPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);$/;"	t
PFNGLSAMPLERPARAMETERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	t
PFNGLSAMPLERPARAMETERIIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSAMPLERPARAMETERIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t
PFNGLSAMPLERPARAMETERIUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);$/;"	t
PFNGLSAMPLERPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSCISSORARRAYVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t
PFNGLSCISSORINDEXEDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORINDEXEDVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLSCISSORPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLSECONDARYCOLORFORMATNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	t
PFNGLSHADERBINARYPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const void *binary, GLsizei length);$/;"	t
PFNGLSHADERSOURCEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar *const*string, const GLint *length);$/;"	t
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);$/;"	t
PFNGLSIGNALVKFENCENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSIGNALVKFENCENVPROC) (GLuint64 vkFence);$/;"	t
PFNGLSIGNALVKSEMAPHORENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSIGNALVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t
PFNGLSPECIALIZESHADERARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSPECIALIZESHADERARBPROC) (GLuint shader, const GLchar *pEntryPoint, GLuint numSpecializationConstants, const GLuint *pConstantIndex, const GLuint *pConstantValue);$/;"	t
PFNGLSTATECAPTURENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTATECAPTURENVPROC) (GLuint state, GLenum mode);$/;"	t
PFNGLSTENCILFILLPATHINSTANCEDNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILFILLPATHNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask);$/;"	t
PFNGLSTENCILFUNCPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILMASKPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILOPPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILSTROKEPATHNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask);$/;"	t
PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILTHENCOVERFILLPATHNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERFILLPATHNVPROC) (GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode);$/;"	t
PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHINSTANCEDNVPROC) (GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILTHENCOVERSTROKEPATHNVPROC) (GLuint path, GLint reference, GLuint mask, GLenum coverMode);$/;"	t
PFNGLSUBPIXELPRECISIONBIASNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLSUBPIXELPRECISIONBIASNVPROC) (GLuint xbits, GLuint ybits);$/;"	t
PFNGLTEXBUFFERARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERRANGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXCOORDFORMATNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLTEXIMAGE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXPAGECOMMITMENTARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPAGECOMMITMENTARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	t
PFNGLTEXPARAMETERFPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXPARAMETERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXPARAMETERIIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXPARAMETERIUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXSTORAGE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXSUBIMAGE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREBARRIERNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t
PFNGLTEXTUREBARRIERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERPROC) (void);$/;"	t
PFNGLTEXTUREBUFFEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXTUREBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERPROC) (GLuint texture, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXTUREBUFFERRANGEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXTUREBUFFERRANGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEPROC) (GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXTUREIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREIMAGE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREPAGECOMMITMENTEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPAGECOMMITMENTEXTPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit);$/;"	t
PFNGLTEXTUREPARAMETERFEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXTUREPARAMETERFPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFPROC) (GLuint texture, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXTUREPARAMETERFVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXTUREPARAMETERFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVPROC) (GLuint texture, GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXTUREPARAMETERIEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXTUREPARAMETERIIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVPROC) (GLuint texture, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIPROC) (GLuint texture, GLenum pname, GLint param);$/;"	t
PFNGLTEXTUREPARAMETERIUIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXTUREPARAMETERIUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVPROC) (GLuint texture, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXTUREPARAMETERIVEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVPROC) (GLuint texture, GLenum pname, const GLint *param);$/;"	t
PFNGLTEXTURERENDERBUFFEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLTEXTURESTORAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC) (GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DPROC) (GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESUBIMAGE1DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DPROC) (GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE2DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE3DEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels);$/;"	t
PFNGLTEXTUREVIEWPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	t
PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC) (GLuint xfb, GLuint index, GLuint buffer);$/;"	t
PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC) (GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar *const*varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMPATHNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMPATHNVPROC) (GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues);$/;"	t
PFNGLUNIFORM1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t
PFNGLUNIFORM1DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM1FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1I64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64ARBPROC) (GLint location, GLint64 x);$/;"	t
PFNGLUNIFORM1I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t
PFNGLUNIFORM1I64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM1I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM1IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1UI64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64ARBPROC) (GLint location, GLuint64 x);$/;"	t
PFNGLUNIFORM1UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t
PFNGLUNIFORM1UI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM1UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM1UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLUNIFORM2DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM2FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2I64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64ARBPROC) (GLint location, GLint64 x, GLint64 y);$/;"	t
PFNGLUNIFORM2I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLUNIFORM2I64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM2I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM2IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2UI64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y);$/;"	t
PFNGLUNIFORM2UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLUNIFORM2UI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM2UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM2UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLUNIFORM3DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM3FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3I64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z);$/;"	t
PFNGLUNIFORM3I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLUNIFORM3I64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM3I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM3IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3UI64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z);$/;"	t
PFNGLUNIFORM3UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLUNIFORM3UI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM3UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM3UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLUNIFORM4DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM4FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4I64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64ARBPROC) (GLint location, GLint64 x, GLint64 y, GLint64 z, GLint64 w);$/;"	t
PFNGLUNIFORM4I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLUNIFORM4I64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VARBPROC) (GLint location, GLsizei count, const GLint64 *value);$/;"	t
PFNGLUNIFORM4I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM4IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4UI64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64ARBPROC) (GLint location, GLuint64 x, GLuint64 y, GLuint64 z, GLuint64 w);$/;"	t
PFNGLUNIFORM4UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLUNIFORM4UI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORM4UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM4UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORMBLOCKBINDINGPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	t
PFNGLUNIFORMHANDLEUI64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64ARBPROC) (GLint location, GLuint64 value);$/;"	t
PFNGLUNIFORMHANDLEUI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64NVPROC) (GLint location, GLuint64 value);$/;"	t
PFNGLUNIFORMHANDLEUI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VARBPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORMHANDLEUI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMHANDLEUI64VNVPROC) (GLint location, GLsizei count, const GLuint64 *value);$/;"	t
PFNGLUNIFORMMATRIX2DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X3DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X3FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X4DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X2DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X4DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X2DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X3DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMSUBROUTINESUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	t
PFNGLUNIFORMUI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t
PFNGLUNIFORMUI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNMAPBUFFERPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPNAMEDBUFFEREXTPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t
PFNGLUNMAPNAMEDBUFFERPROC	glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLUSEPROGRAMPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLUSEPROGRAMSTAGESPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	t
PFNGLUSESHADERPROGRAMEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMPIPELINEPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLVALIDATEPROGRAMPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVERTEXARRAYATTRIBBINDINGPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBBINDINGPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXARRAYATTRIBFORMATPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYATTRIBIFORMATPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBIFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYATTRIBLFORMATPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYATTRIBLFORMATPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYBINDINGDIVISORPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDINGDIVISORPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLVERTEXARRAYCOLOROFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYEDGEFLAGOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYELEMENTBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYELEMENTBUFFERPROC) (GLuint vaobj, GLuint buffer);$/;"	t
PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYFOGCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYINDEXOFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYINDEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYMULTITEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYNORMALOFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYNORMALOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYSECONDARYCOLOROFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYTEXCOORDOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBDIVISOREXTPROC) (GLuint vaobj, GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYVERTEXBUFFERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLVERTEXARRAYVERTEXBUFFERSPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBUFFERSPROC) (GLuint vaobj, GLuint first, GLsizei count, const GLuint *buffers, const GLintptr *offsets, const GLsizei *strides);$/;"	t
PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXATTRIB1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1SPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2SPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3SPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4FPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4SPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBBINDINGPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXATTRIBDIVISORARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBDIVISORPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBFORMATNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBFORMATPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBI1IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4BVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4IPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4SVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4USVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBIFORMATNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBIFORMATPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBIPOINTERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBL1DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIBL1DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL1I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL1UI64ARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64ARBPROC) (GLuint index, GLuint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1UI64VARBPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VARBPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL1UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIBL2DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL2I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIBL3DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL3I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4DPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIBL4DVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL4I64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4I64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4UI64NVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4UI64VNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBLFORMATNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBLFORMATPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBLPOINTERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXATTRIBP1UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP1UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP2UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP2UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP3UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP3UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP4UIPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP4UIVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void *pointer);$/;"	t
PFNGLVERTEXBINDINGDIVISORPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXFORMATNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVIEWPORTARRAYVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVIEWPORTINDEXEDFPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	t
PFNGLVIEWPORTINDEXEDFVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVIEWPORTPOSITIONWSCALENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPOSITIONWSCALENVPROC) (GLuint index, GLfloat xcoeff, GLfloat ycoeff);$/;"	t
PFNGLVIEWPORTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLVIEWPORTSWIZZLENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTSWIZZLENVPROC) (GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew);$/;"	t
PFNGLWAITSYNCPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWAITVKSEMAPHORENVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITVKSEMAPHORENVPROC) (GLuint64 vkSemaphore);$/;"	t
PFNGLWEIGHTPATHSNVPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLWEIGHTPATHSNVPROC) (GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights);$/;"	t
PFNGLWINDOWRECTANGLESEXTPROC	glcorearb.h	/^typedef void (APIENTRYP PFNGLWINDOWRECTANGLESEXTPROC) (GLenum mode, GLsizei count, const GLint *box);$/;"	t
PROTOTYPES	gl_shims.hpp	5;"	d
SDL_LIBS	Makefile	/^	SDL_LIBS=`sdl2-config --libs` -framework OpenGL$/;"	m
SDL_LIBS	Makefile	/^	SDL_LIBS=`sdl2-config --libs` -lGL$/;"	m
UNAME	Makefile	/^UNAME=$(shell uname -s)$/;"	m
UpperLeftOrigin	load_save_png.hpp	/^	UpperLeftOrigin,$/;"	e	enum:OriginLocation
WIN32_LEAN_AND_MEAN	glcorearb.h	39;"	d
__glcorearb_h_	glcorearb.h	2;"	d
compile_shader	main.cpp	/^static GLuint compile_shader(GLenum type, std::string const &source) {$/;"	f	file:
do_extension	make-gl-shims.py	/^				do_extension = False$/;"	v
do_extension	make-gl-shims.py	/^				do_extension = True$/;"	v
do_proto	make-gl-shims.py	/^				do_proto = False$/;"	v
do_proto	make-gl-shims.py	/^				do_proto = True$/;"	v
extensions	make-gl-shims.py	/^extensions = []$/;"	v
in_version	make-gl-shims.py	/^				in_version = None$/;"	v
in_version	make-gl-shims.py	/^			in_version = m.group(1)$/;"	v
in_version	make-gl-shims.py	/^	in_version = None$/;"	v
init_gl_shims	gl_shims.cpp	/^bool init_gl_shims() {$/;"	f
int32_t	glcorearb.h	/^typedef __int32 int32_t;$/;"	t
int32_t	glcorearb.h	/^typedef long int int32_t;$/;"	t
int64_t	glcorearb.h	/^typedef __int64 int64_t;$/;"	t
int64_t	glcorearb.h	/^typedef long int int64_t;$/;"	t
int64_t	glcorearb.h	/^typedef long long int int64_t;$/;"	t
lc	make-gl-shims.py	/^					lc = m.group(1)$/;"	v
link_program	main.cpp	/^static GLuint link_program(GLuint fragment_shader, GLuint vertex_shader) {$/;"	f	file:
load_png	load_save_png.cpp	/^bool load_png(std::istream &from, unsigned int *width, unsigned int *height, vector< uint32_t > *data, OriginLocation origin) {$/;"	f
load_png	load_save_png.cpp	/^bool load_png(std::string filename, unsigned int *width, unsigned int *height, std::vector< uint32_t > *data, OriginLocation origin) {$/;"	f
m	make-gl-shims.py	/^				m = re.match(r"GLAPI .* APIENTRY gl([^ ]+) \\(", line)$/;"	v
m	make-gl-shims.py	/^				m = re.match(r"^GLAPI ", line)$/;"	v
m	make-gl-shims.py	/^			m = re.match(r"^#endif \/\\* " + in_version + " \\*\/$", line)$/;"	v
m	make-gl-shims.py	/^		m = re.match(r"^#ifndef (GL_VERSION_(\\d)_(\\d))", line)$/;"	v
main	main.cpp	/^int main(int argc, char **argv) {$/;"	f
major	make-gl-shims.py	/^			major = int(m.group(2))$/;"	v
minor	make-gl-shims.py	/^			minor = int(m.group(3))$/;"	v
protos	make-gl-shims.py	/^protos = []$/;"	v
save_png	load_save_png.cpp	/^void save_png(std::ostream &to, unsigned int width, unsigned int height, uint32_t const *data, OriginLocation origin) {$/;"	f
save_png	load_save_png.cpp	/^void save_png(std::string filename, unsigned int width, unsigned int height, uint32_t const *data, OriginLocation origin) {$/;"	f
uc	make-gl-shims.py	/^					uc = lc.upper()$/;"	v
uint64_t	glcorearb.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	glcorearb.h	/^typedef unsigned long int uint64_t;$/;"	t
uint64_t	glcorearb.h	/^typedef unsigned long long int uint64_t;$/;"	t
user_flush_data	load_save_png.cpp	/^static void user_flush_data(png_structp png_ptr) {$/;"	f	file:
user_read_data	load_save_png.cpp	/^static void user_read_data(png_structp png_ptr, png_bytep data, png_size_t length) {$/;"	f	file:
user_write_data	load_save_png.cpp	/^static void user_write_data(png_structp png_ptr, png_bytep data, png_size_t length) {$/;"	f	file:
